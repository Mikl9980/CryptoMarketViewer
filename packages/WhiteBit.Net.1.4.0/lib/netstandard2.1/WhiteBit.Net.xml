<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WhiteBit.Net</name>
    </assembly>
    <members>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api">
            <inheritdoc cref="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api" />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.Account">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.Convert">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.Codes">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.SubAccount">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.Trading">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.CollateralTrading">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.ExchangeName">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4Api.SharedClient">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetMainBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetSpotBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetFiatDepositAddressAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.WithdrawAsync(System.String,System.Decimal,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.TransferAsync(WhiteBit.Net.Enums.AccountType,WhiteBit.Net.Enums.AccountType,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetDepositWithdrawalHistoryAsync(System.Nullable{WhiteBit.Net.Enums.TransactionType},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.CreateDepositAddressAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetDepositWithdrawalSettingsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetMiningRewardHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetCollateralBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetCollateralBalanceSummaryAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetCollateralAccountSummaryAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.SetAccountLeverageAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiAccount.GetTradingFeesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCodes">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCodes.CreateCodeAsync(System.String,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCodes.ApplyCodeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCodes.GetCreatedCodesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCodes.GetCodeHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.PlaceOrderAsync(System.String,WhiteBit.Net.Enums.OrderSide,WhiteBit.Net.Enums.NewOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{WhiteBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.GetOpenPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.GetPositionHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.GetOpenConditionalOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.PlaceOcoOrderAsync(System.String,WhiteBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.CancelOcoOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.CancelConditionalOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiCollateralTrading.CancelOTOOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiConvert">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiConvert.GetConvertEstimateAsync(System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiConvert.ConfirmConvertAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiConvert.GetConvertHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{WhiteBit.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetDepositWithdrawalInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetCollateralSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiExchangeData.GetFuturesSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.CreateSubAccountAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.DeleteSubAccountAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.EditSubAccountAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.SubaccountTransferAsync(System.String,WhiteBit.Net.Enums.SubTransferDirection,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.BlockSubaccountAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.UnblockSubaccountAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.GetSubaccountBalancesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiSubAccount.GetSubaccountTransferHistoryAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.PlaceSpotOrderAsync(System.String,WhiteBit.Net.Enums.OrderSide,WhiteBit.Net.Enums.NewOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{WhiteBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.PlaceSpotMultipleOrdersAsync(System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.CancelOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.CancelAllOrdersAsync(System.String,System.Collections.Generic.IEnumerable{WhiteBit.Net.Enums.OrderProductType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.GetClosedOrdersAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{WhiteBit.Net.Enums.ClosedOrderStatus},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.GetOrderTradesAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.EditOrderAsync(System.String,System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.SetKillSwitchAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{WhiteBit.Net.Enums.OrderProductType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitRestClientV4ApiTrading.GetKillSwitchStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api">
            <summary>
            Client providing access to the WhiteBit V4 websocket Api
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.ClientOptions">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.#ctor(Microsoft.Extensions.Logging.ILogger,WhiteBit.Net.Objects.Options.WhiteBitSocketOptions)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetTradeHistoryAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetLastPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToLastPriceUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitLastPriceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToLastPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitLastPriceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTickerUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetKlinesAsync(System.String,WhiteBit.Net.Enums.KlineInterval,System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToKlineUpdatesAsync(System.String,WhiteBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetOrderBookAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetSpotBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToSpotBalanceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.Dictionary{System.String,WhiteBit.Net.Objects.Models.WhiteBitTradeBalance}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetMarginBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToMarginBalanceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitMarginBalance}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToOpenOrderUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{WhiteBit.Net.Enums.OrderType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToClosedOrderUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},WhiteBit.Net.Enums.ClosedOrderFilter,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitClosedOrder}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetUserTradesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToUserTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitPositionsUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToBorrowUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitBorrow}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToAccountMarginPositionEventUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitAccountMarginPositionUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SubscribeToAccountBorrowEventUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitAccountBorrowUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.SharedClient">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.V4Api.WhiteBitSocketClientV4Api.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.WhiteBitRestClient">
            <inheritdoc cref="T:WhiteBit.Net.Interfaces.Clients.IWhiteBitRestClient" />
        </member>
        <member name="P:WhiteBit.Net.Clients.WhiteBitRestClient.V4Api">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitRestClient.#ctor(System.Action{WhiteBit.Net.Objects.Options.WhiteBitRestOptions})">
            <summary>
            Create a new instance of the WhiteBitRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{WhiteBit.Net.Objects.Options.WhiteBitRestOptions})">
            <summary>
            Create a new instance of the WhiteBitRestClient using provided options
            </summary>
            <param name="options">Option configuration</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitRestClient.SetDefaultOptions(System.Action{WhiteBit.Net.Objects.Options.WhiteBitRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Clients.WhiteBitSocketClient">
            <inheritdoc cref="T:WhiteBit.Net.Interfaces.Clients.IWhiteBitSocketClient" />
        </member>
        <member name="P:WhiteBit.Net.Clients.WhiteBitSocketClient.V4Api">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitSocketClient.#ctor(System.Action{WhiteBit.Net.Objects.Options.WhiteBitSocketOptions})">
            <summary>
            Create a new instance of WhiteBitSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitSocketClient.#ctor(Microsoft.Extensions.Options.IOptions{WhiteBit.Net.Objects.Options.WhiteBitSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of WhiteBitSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="options">Option configuration</param>
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitSocketClient.SetDefaultOptions(System.Action{WhiteBit.Net.Objects.Options.WhiteBitSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:WhiteBit.Net.Clients.WhiteBitSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Enums.AccountBorrowUpdateType">
            <summary>
            Borrow update
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.AccountBorrowUpdateType.MarginCall">
            <summary>
            Margin call
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.AccountBorrowUpdateType.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.AccountType.Main">
            <summary>
            Main account
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.AccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.AccountType.Collateral">
            <summary>
            Collateral account
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.ActivationCondition">
            <summary>
            Activation condition
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ActivationCondition.GreaterThanOrEqual">
            <summary>
            Price condition higher than x
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ActivationCondition.LessThanOrEqu">
            <summary>
            Price condition lower than x
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.ClosedOrderFilter">
            <summary>
            Closed order filter
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ClosedOrderFilter.LimitAndMarket">
            <summary>
            Limit and market orders
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ClosedOrderFilter.Limit">
            <summary>
            Only limit orders
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ClosedOrderFilter.Market">
            <summary>
            Only market orders
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.ClosedOrderStatus">
            <summary>
            Status of a closed order
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ClosedOrderStatus.All">
            <summary>
            All, for filtering
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ClosedOrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ClosedOrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.ConditionalOrderType">
            <summary>
            Conditional order type
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ConditionalOrderType.OneTriggersOther">
            <summary>
            OTO
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ConditionalOrderType.OneCancelsOther">
            <summary>
            OCO
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.KlineInterval">
            <summary>
            Kline interval
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.OneMinute">
            <summary>
            One minute
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.ThreeMinutes">
            <summary>
            Three minutes
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            Five minutes
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            Fifteen minutes
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            Thirty minutes
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.TwoHours">
            <summary>
            Two hours
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.FourHours">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.SixHours">
            <summary>
            Six hours
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.TwelveHours">
            <summary>
            Twelve hours
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.ThreeDays">
            <summary>
            Three days
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.OneWeek">
            <summary>
            One week
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.KlineInterval.OneMonth">
            <summary>
            One month
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.LiquidationStatus">
            <summary>
            Liquidation status
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.LiquidationStatus.MarginCall">
            <summary>
            Margin call
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.LiquidationStatus.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.NewOrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.NewOrderType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.NewOrderType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.NewOrderType.StopLimit">
            <summary>
            Stop limit
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.NewOrderType.StopMarket">
            <summary>
            Stop market
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.OrderEvent">
            <summary>
            Order update event
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderEvent.New">
            <summary>
            New order
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderEvent.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderEvent.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.OrderProductType">
            <summary>
            Order product type
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderProductType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderProductType.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderProductType.Futures">
            <summary>
            Futures
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderStatus.Open">
            <summary>
            Unfilled
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.MarketBase">
            <summary>
            Market order with quantity in base asset
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.StopLimit">
            <summary>
            Stop limit
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.StopMarket">
            <summary>
            Stop market
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.CollateralLimit">
            <summary>
            Margin limit
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.CollateralMarket">
            <summary>
            Margin market
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.CollateralStopLimit">
            <summary>
            Margin stop limit
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.CollateralTriggerStopMarket">
            <summary>
            Margin trigger stop market
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.OrderType.CollateralNormalization">
            <summary>
            Margin normalization
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.ProductType">
            <summary>
            Product type
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ProductType.Futures">
            <summary>
            Delivery futures
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ProductType.Perpetual">
            <summary>
            Perpetual
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.ProductType.Options">
            <summary>
            Options
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.SelfTradePreventionMode">
            <summary>
            Self Trade Prevention mode
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SelfTradePreventionMode.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SelfTradePreventionMode.CancelBoth">
            <summary>
            Cancel both pre-existing and new order
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SelfTradePreventionMode.CancelNew">
            <summary>
            Cancel the new order
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SelfTradePreventionMode.CancelOld">
            <summary>
            Cancel the pre-exisiting order
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.SubTransferDirection">
            <summary>
            Sub account transfer direction
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SubTransferDirection.FromSubAccount">
            <summary>
            From sub account to main
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SubTransferDirection.ToSubAccount">
            <summary>
            From main to sub account
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.SymbolType">
            <summary>
            Type of symbol
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SymbolType.Spot">
            <summary>
            Spot symbol
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SymbolType.Futures">
            <summary>
            Futures symbol
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.SystemStatus">
            <summary>
            Status of the system
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SystemStatus.Operational">
            <summary>
            System operational
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.SystemStatus.Maintenance">
            <summary>
            System maintenance
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.TradeRole">
            <summary>
            Trade role
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TradeRole.Maker">
            <summary>
            Maker
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TradeRole.Taker">
            <summary>
            Taker
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.TransactionStatus">
            <summary>
            Transaction status
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionStatus.UnconfirmedByUser">
            <summary>
            Unconfirmed by user
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionStatus.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionStatus.Uncredited">
            <summary>
            Uncredited
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionStatus.PartialSuccess">
            <summary>
            Partial success
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Enums.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Enums.TransactionType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="T:WhiteBit.Net.ExtensionMethods.WhiteBitExtensionMethods">
            <summary>
            Extension methods specific to using the WhiteBit API
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.IWhiteBitRestClient">
            <summary>
            Client for accessing the WhiteBit Rest API. 
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.IWhiteBitRestClient.V4Api">
            <summary>
            V4 API endpoints
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.IWhiteBitRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.IWhiteBitRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.IWhiteBitSocketClient">
            <summary>
            Client for accessing the WhiteBit websocket API
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.IWhiteBitSocketClient.V4Api">
            <summary>
            V4 API endpoints
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.IWhiteBitSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.IWhiteBitSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api">
            <summary>
            WhiteBit V4 API endpoints
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.Convert">
            <summary>
            Convert endpoints
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.Codes">
            <summary>
            Code endpoints
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.SubAccount">
            <summary>
            Subaccount endpoints
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.CollateralTrading">
            <summary>
            Endpoints related to collateral (Futures and Spot Margin) orders and trades
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4Api.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount">
            <summary>
            WhiteBit V4 account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetMainBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get main account balances
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#main-balance" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get deposit address
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#get-cryptocurrency-deposit-address" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="network">Network to use</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetSpotBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get spot trading balances
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#trading-balance" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetFiatDepositAddressAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get fiat deposit url, note that his endpoint is not available by default and has to be activated for you by WhiteBit support
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#get-fiat-deposit-address" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="provider">The provider</param>
            <param name="quantity">The quantity</param>
            <param name="clientOrderId">Client order id</param>
            <param name="successLink">Success redirect link</param>
            <param name="failureLink">Failure redirect link</param>
            <param name="returnLink">Redirect link when user cancels</param>
            <param name="customerFirstName">Customer first name</param>
            <param name="customerLastName">Customer last name</param>
            <param name="customerEmail">Customer email</param>
            <param name="customerAddressLine1">Customer address line 1</param>
            <param name="customerAddressLine2">Customer address line 2</param>
            <param name="customerCity">Customer city</param>
            <param name="customerZipCode">Customer zip code</param>
            <param name="customerCountryCode">Customer country code</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.WithdrawAsync(System.String,System.Decimal,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw fiat or crypto
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#create-withdraw-request" /></para>
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#create-withdraw-request-with-the-specific-withdraw-amount-fee-is-not-included" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">Quantity to withdraw</param>
            <param name="address">Target address (wallet address for cryptocurrencies, identifier/card number for fiat currencies)</param>
            <param name="uniqueId">Unique id</param>
            <param name="deductFeeFromOutput">True: fee is deducted from the output amount, false: fee is deducted from the send amount</param>
            <param name="memo">Memo</param>
            <param name="provider">Provider name for fiat withdrawal</param>
            <param name="network">Network for crypto withdrawal</param>
            <param name="partialEnable">Partial enable for fiat withdrawal</param>
            <param name="beneficiaryFirstName">Beneficiary first name for fiat withdrawal</param>
            <param name="beneficiaryLastName">Beneficiary last name for fiat withdrawal</param>
            <param name="beneficiaryTin">Beneficiary TAX payer number</param>
            <param name="beneficiaryPhone">Beneficiary phone number</param>
            <param name="beneficiaryEmail">Beneficiary email</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.TransferAsync(WhiteBit.Net.Enums.AccountType,WhiteBit.Net.Enums.AccountType,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer between accounts
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#transfer-between-balances" /></para>
            </summary>
            <param name="fromAccount">From account</param>
            <param name="toAccount">To account</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetDepositWithdrawalHistoryAsync(System.Nullable{WhiteBit.Net.Enums.TransactionType},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get deposit/withdrawal history
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#get-depositwithdraw-history" /></para>
            </summary>
            <param name="type">Filter by type</param>
            <param name="asset">Filter by asset</param>
            <param name="address">Filter by address</param>
            <param name="memo">Filter by memo</param>
            <param name="addresses">Filter by multiple addresses</param>
            <param name="uniqueId">Filter by uniqueId</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.CreateDepositAddressAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new deposit address, note that his endpoint is not available by default and has to be activated for you by WhiteBit support
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#create-new-address-for-deposit" /></para>
            </summary>
            <param name="asset">Asset name</param>
            <param name="network">Asset network</param>
            <param name="addressType">Address type for BTC/LTC: p2sh-segwit, bech32</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetDepositWithdrawalSettingsAsync(System.Threading.CancellationToken)">
            <summary>
            Get deposit/withdrawal settings
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#fees" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetMiningRewardHistoryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get mining rewards history
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#get-rewards" /></para>
            </summary>
            <param name="accountName">Filter by account name</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetCollateralBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get collateral balances
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#collateral-account-balance" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetCollateralBalanceSummaryAsync(System.Threading.CancellationToken)">
            <summary>
            Get collateral balance summary
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#collateral-account-balance-summary" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetCollateralAccountSummaryAsync(System.Threading.CancellationToken)">
            <summary>
            Get collateral account summary
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#collateral-account-summary" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.SetAccountLeverageAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Set leverage for the entire account, both spot margin and futures. Spot margin leverage is capped at x20.
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#change-collateral-account-leverage" /></para>
            </summary>
            <param name="leverage">New leverage setting</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiAccount.GetTradingFeesAsync(System.Threading.CancellationToken)">
            <summary>
            Get the users trading fees
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#query-all-market-fees" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCodes">
            <summary>
            WhiteBit V4 code endpoints
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCodes.CreateCodeAsync(System.String,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new WhiteBit Code for funds transfer
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#create-code" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="passphrase">Passphrase for applying the code</param>
            <param name="description">Description</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCodes.ApplyCodeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Apply a WhiteBit code
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#apply-code" /></para>
            </summary>
            <param name="code">The WhiteBit code</param>
            <param name="passphrase">Code passphrase</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCodes.GetCreatedCodesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get generated code history
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#get-my-codes" /></para>
            </summary>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCodes.GetCodeHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get account code history
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#get-codes-history" /></para>
            </summary>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading">
            <summary>
            WhiteBit V4 collateral trading endpoints (Futures and Spot Margin), placing and managing orders.
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.PlaceOrderAsync(System.String,WhiteBit.Net.Enums.OrderSide,WhiteBit.Net.Enums.NewOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{WhiteBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#collateral-limit-order" /></para>
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#collateral-market-order" /></para>
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#collateral-stop-limit-order" /></para>
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#collateral-trigger-market-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Quantity of the order in base asset</param>
            <param name="price">Limit price</param>
            <param name="postOnly">Post only flag</param>
            <param name="immediateOrCancel">Immediate or cancel flag</param>
            <param name="stopLossPrice">Stop loss price</param>
            <param name="takeProfitPrice">Take porfit price</param>
            <param name="bboRole">BBO role</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="stpMode">Self trade prevention mode</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.GetOpenPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get open positions
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#open-positions" /></para>
            </summary>
            <param name="symbol">Filter by symbol</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.GetPositionHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get position history
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#positions-history" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="positionId">Filter by position id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.GetOpenConditionalOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open conditional orders
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#query-unexecutedactive-conditional-orders" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.PlaceOcoOrderAsync(System.String,WhiteBit.Net.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new OCO order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#create-collateral-oco-order" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_PERP`</param>
            <param name="orderSide">Order side</param>
            <param name="quantity">Quantity</param>
            <param name="price">Limit price</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="stopLimitPrice">Stop limit price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.CancelOcoOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel an OCO order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#cancel-oco-order" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_PERP`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.CancelConditionalOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel a conditional order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#cancel-conditional-order" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_PERP`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiCollateralTrading.CancelOTOOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel an OTO order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#cancel-conditional-order" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_PERP`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiConvert">
            <summary>
            WhiteBit V4 convert endpoints
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiConvert.GetConvertEstimateAsync(System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Get convert estimate
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#convert-estimate" /></para>
            </summary>
            <param name="fromAsset">From asset</param>
            <param name="toAsset">To asset</param>
            <param name="quantity">Quantity</param>
            <param name="fromOrToQuantity">Whether the quantity is specified in the fromAsset or toAsset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiConvert.ConfirmConvertAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Accept/confirm a convert estimate
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#convert-confirm" /></para>
            </summary>
            <param name="estimateId">Quote/estimate id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiConvert.GetConvertHistoryAsync(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get convert history
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#convert-history" /></para>
            </summary>
            <param name="fromAsset">Filter by from asset</param>
            <param name="toAsset">Filter by to asset</param>
            <param name="quoteId">Filter by quote id</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData">
            <summary>
            WhiteBit V4 exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the current server time
            <para><a href="https://docs.whitebit.com/public/http-v4/#server-time" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get symbols list
            <para><a href="https://docs.whitebit.com/public/http-v4/#market-info" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Get system/platform status
            <para><a href="https://docs.whitebit.com/public/http-v4/#maintenance-status" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get tickers
            <para><a href="https://docs.whitebit.com/public/http-v4/#market-activity" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get asset information
            <para><a href="https://docs.whitebit.com/public/http-v4/#asset-status-list" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the order book for a symbol
            <para><a href="https://docs.whitebit.com/public/http-v4/#orderbook" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_USDT`</param>
            <param name="limit">The order book depth</param>
            <param name="mergeLevel">Aggregation level</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetRecentTradesAsync(System.String,System.Nullable{WhiteBit.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <summary>
            Get the most recent 100 trades
            <para><a href="https://docs.whitebit.com/public/http-v4/#recent-trades" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="side">Filter by trade side</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetDepositWithdrawalInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get withdrawal/deposit limits and fees
            <para><a href="https://docs.whitebit.com/public/http-v4/#fee" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetCollateralSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get collateral symbols
            <para><a href="https://docs.whitebit.com/public/http-v4/#collateral-markets-list" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiExchangeData.GetFuturesSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get futures symbols
            <para><a href="https://docs.whitebit.com/public/http-v4/#available-futures-markets-list" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiShared">
            <summary>
            Shared interface for V4 rest API usage
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount">
            <summary>
            WhiteBit V4 sub account endpoints
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.CreateSubAccountAsync(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new sub account
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#create-sub-account" /></para>
            </summary>
            <param name="alias">Account name</param>
            <param name="email">If provided an invitation email will be send</param>
            <param name="shareKyc">If KYC is shared with main account</param>
            <param name="spotEnabled">Whether spot trading is enabled</param>
            <param name="collateralEnabled">Whether collateral trading is enabled</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.DeleteSubAccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a sub account
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#delete-sub-account" /></para>
            </summary>
            <param name="id">Sub account id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.EditSubAccountAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Edit a sub account
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#edit-sub-account" /></para>
            </summary>
            <param name="id">Sub account id</param>
            <param name="alias">Sub account alias</param>
            <param name="spotEnabled">Spot trading enabled</param>
            <param name="collateralEnabled">Collateral trading enabled</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.GetSubAccountsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get sub account list
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#edit-sub-account" /></para>
            </summary>
            <param name="search">Search string</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.SubaccountTransferAsync(System.String,WhiteBit.Net.Enums.SubTransferDirection,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer to or from sub account
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#sub-account-transfer" /></para>
            </summary>
            <param name="subaccountId">Sub account id</param>
            <param name="direction">Transfer direction</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.BlockSubaccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Block a sub account
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#block-sub-account" /></para>
            </summary>
            <param name="id">Sub account id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.UnblockSubaccountAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Unblock a sub account
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#unblock-sub-account" /></para>
            </summary>
            <param name="id">Sub account id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.GetSubaccountBalancesAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get sub account balances
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#sub-account-balances" /></para>
            </summary>
            <param name="id">Sub account id</param>
            <param name="asset">Asset name</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiSubAccount.GetSubaccountTransferHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Get sub account transfer history
            <para><a href="https://docs.whitebit.com/private/http-main-v4/#get-sub-account-transfer-history" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading">
            <summary>
            WhiteBit V4 trading endpoints, placing and managing orders.
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.PlaceSpotOrderAsync(System.String,WhiteBit.Net.Enums.OrderSide,WhiteBit.Net.Enums.NewOrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.String,System.Nullable{WhiteBit.Net.Enums.SelfTradePreventionMode},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#create-limit-order" /></para>
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#create-market-order" /></para>
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#create-buy-stock-market-order" /></para>
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#create-stop-limit-order" /></para>
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#create-stop-market-order" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="side">Order side</param>
            <param name="type">Order type</param>
            <param name="quantity">Quantity of the order in base asset</param>
            <param name="quoteQuantity">Quantity of the order in quote asset, only supported for market buy orders</param>
            <param name="price">Limit price</param>
            <param name="postOnly">Post only flag</param>
            <param name="immediateOrCancel">Immediate or cancel flag</param>
            <param name="bboRole">BBO role</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="clientOrderId">Client order id</param>
            <param name="stpMode">Self trade prevention mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.PlaceSpotMultipleOrdersAsync(System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple order in a single call. Only supports limit orders. Check the response data for individual order placement results
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#bulk-limit-order" /></para>
            </summary>
            <param name="requests">Orders to place</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.CancelOrderAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#cancel-order" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_USDT`</param>
            <param name="id">The order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.CancelAllOrdersAsync(System.String,System.Collections.Generic.IEnumerable{WhiteBit.Net.Enums.OrderProductType},System.Threading.CancellationToken)">
            <summary>
            Cancel all orders
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#cancel-all-orders" /></para>
            </summary>
            <param name="symbol">Filter by symbol</param>
            <param name="orderProductTypes">Filter by order product types</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.GetOpenOrdersAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get list of currently open orders
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#query-unexecutedactive-orders" /></para>
            </summary>
            <param name="symbol">Filter symbol, for example `ETH_USDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.GetClosedOrdersAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{WhiteBit.Net.Enums.ClosedOrderStatus},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get list of closed orders per symbol
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#query-executed-orders" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="orderId">Filter by order id</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="status">Filter by order status</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result ofset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.GetUserTradesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user trade history
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#query-executed-order-history" /></para>
            </summary>
            <param name="symbol">Filter by symbol, for example `ETH_USDT`</param>
            <param name="clientOrderId">Filter by client order id</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.GetOrderTradesAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get trades for a specific order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#query-executed-order-deals" /></para>
            </summary>
            <param name="orderId">The order id</param>
            <param name="limit">Max number of results</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.EditOrderAsync(System.String,System.Int64,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Threading.CancellationToken)">
            <summary>
            Edit an order
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#modify-order" /></para>
            </summary>
            <param name="orderId">The order id</param>
            <param name="symbol">The symbol, for example `ETH_USDT`</param>
            <param name="quantity">New quantity</param>
            <param name="quoteQuantity">New quote quantity</param>
            <param name="price">New price</param>
            <param name="triggerPrice">New trigger price</param>
            <param name="clientOrderId">New client order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.SetKillSwitchAsync(System.String,System.Int32,System.Collections.Generic.IEnumerable{WhiteBit.Net.Enums.OrderProductType},System.Threading.CancellationToken)">
            <summary>
            Set a kill switch. After the specified timeout all order fitting the parameters will be canceled unless the kill switch endpoint is called again to extend or cancel the timeout
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#sync-kill-switch-timer" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETH_USDT`</param>
            <param name="timeout">The timeout in seconds, or 0 to cancel the kill switch</param>
            <param name="symbolProductTypes">Symbol product types</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitRestClientV4ApiTrading.GetKillSwitchStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the status of enabled kill switches
            <para><a href="https://docs.whitebit.com/private/http-trade-v4/#status-kill-switch-timer" /></para>
            </summary>
            <param name="symbol">Filter by symbol</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api">
            <summary>
            WhiteBit V4 streams
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetTradeHistoryAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get trades for a symbol
            <para><a href="https://docs.whitebit.com/public/websocket/#%EF%B8%8F-request-16" /></para>
            </summary>
            <param name="symbol">Symbol name</param>
            <param name="limit">Max number of results</param>
            <param name="fromId">Filter by returning results later than the trade with this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://docs.whitebit.com/public/websocket/#-update-events-5" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public trade updates
            <para><a href="https://docs.whitebit.com/public/websocket/#-update-events-5" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetLastPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the last price for a symbol
            <para><a href="https://docs.whitebit.com/public/websocket/#%EF%B8%8F-request-7" /></para>
            </summary>
            <param name="symbol">Symbol name</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToLastPriceUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitLastPriceUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://docs.whitebit.com/public/websocket/#subscribe-1" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToLastPriceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitLastPriceUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://docs.whitebit.com/public/websocket/#subscribe-1" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the ticker for a symbol
            <para><a href="https://docs.whitebit.com/public/websocket/#%EF%B8%8F-request-10" /></para>
            </summary>
            <param name="symbol">Symbol name</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://docs.whitebit.com/public/websocket/#subscribe-2" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitTickerUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://docs.whitebit.com/public/websocket/#subscribe-2" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetKlinesAsync(System.String,WhiteBit.Net.Enums.KlineInterval,System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get klines for a symbol
            <para><a href="https://docs.whitebit.com/public/websocket/#%EF%B8%8F-request-4" /></para>
            </summary>
            <param name="symbol">Symbol name</param>
            <param name="interval">Interval</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToKlineUpdatesAsync(System.String,WhiteBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://docs.whitebit.com/public/websocket/#subscribe" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="interval">The interval</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetOrderBookAsync(System.String,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the ticker for a symbol
            <para><a href="https://docs.whitebit.com/public/websocket/#%EF%B8%8F-request-19" /></para>
            </summary>
            <param name="symbol">Symbol name</param>
            <param name="depth">Order book depth, max 100</param>
            <param name="priceInterval">0 - no interval default. Available values: "0.00000001", "0.0000001", "0.000001", "0.00001", "0.0001", "0.001", "0.01", "0.1"</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://docs.whitebit.com/public/websocket/#-update-events-6" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="depth">The depth of the order book, 1, 5, 10, 20, 30, 50 or 100</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetSpotBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get spot balances
            <para><a href="https://docs.whitebit.com/private/websocket/#balance-spot" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToSpotBalanceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.Dictionary{System.String,WhiteBit.Net.Objects.Models.WhiteBitTradeBalance}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to spot balance updates
            <para><a href="https://docs.whitebit.com/private/websocket/#balance-spot" /></para>
            </summary>
            <param name="assets">Assets to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetMarginBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get margin balances
            <para><a href="https://docs.whitebit.com/private/websocket/#balance-margin" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToMarginBalanceUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitMarginBalance}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to margin balance updates
            <para><a href="https://docs.whitebit.com/private/websocket/#balance-margin" /></para>
            </summary>
            <param name="assets">Assets to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open orders
            <para><a href="https://docs.whitebit.com/private/websocket/#orders-pending" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="limit">Max number of results, max 100</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token for closing this subscription</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToOpenOrderUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to open order updates
            <para><a href="https://docs.whitebit.com/private/websocket/#orders-pending" /></para>
            </summary>
            <param name="symbols"></param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{WhiteBit.Net.Enums.OrderType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get closed orders
            <para><a href="https://docs.whitebit.com/private/websocket/#orders-executed" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="orderTypes">Order types filter</param>
            <param name="limit">Max number of results, max 100</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token for closing this subscription</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToClosedOrderUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},WhiteBit.Net.Enums.ClosedOrderFilter,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitClosedOrder}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to closed order updates
            <para><a href="https://docs.whitebit.com/private/websocket/#orders-executed" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="filter">Order type filter</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.GetUserTradesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user trades
            <para><a href="https://docs.whitebit.com/private/websocket/#deals" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="limit">Max number of results, max 100</param>
            <param name="offset">Result offset</param>
            <param name="ct">Cancellation token for closing this subscription</param>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToUserTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user trade updates
            <para><a href="https://docs.whitebit.com/private/websocket/#deals" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitPositionsUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position updates
            <para><a href="https://docs.whitebit.com/private/websocket/#positions" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToBorrowUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitBorrow}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to borrow updates
            <para><a href="https://docs.whitebit.com/private/websocket/#borrows" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToAccountBorrowEventUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitAccountBorrowUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user margin call and liquidation events
            <para><a href="https://docs.whitebit.com/private/websocket/#account-borrows-events" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SubscribeToAccountMarginPositionEventUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitAccountMarginPositionUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to position margin call and liquidation events
            <para><a href="https://docs.whitebit.com/private/websocket/#account-borrows-events" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4Api.SharedClient">
            <summary>
            Get the shared socket requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.Clients.V4Api.IWhiteBitSocketClientV4ApiShared">
            <summary>
            Shared interface for V4 API socket API usage
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.IWhiteBitOrderBookFactory">
            <summary>
            WhiteBit local order book factory
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Interfaces.IWhiteBitOrderBookFactory.V4">
            <summary>
            V4 order book factory methods
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.IWhiteBitOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.IWhiteBitOrderBookFactory.CreateV4(System.String,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions})">
            <summary>
            Create a new V4 local order book instance
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Interfaces.IWhiteBitTrackerFactory">
            <summary>
            Tracker factory
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Interfaces.IWhiteBitTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new trade tracker for a symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitAccountBorrowUpdate">
            <summary>
            Account borrow update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAccountBorrowUpdate.UpdateType">
            <summary>
            Update type
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAccountBorrowUpdate.BorrowInfo">
            <summary>
            The borrow info the update relates to
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitAccountMarginPositionUpdate">
            <summary>
            Account borrow update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAccountMarginPositionUpdate.UpdateType">
            <summary>
            Update type
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAccountMarginPositionUpdate.PositionInfo">
            <summary>
            The position info the update relates to
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.UnifiedCryptoassetId">
            <summary>
            Unified cryptoasset id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.MinWithdraw">
            <summary>
            Min withdraw
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.MaxWithdraw">
            <summary>
            Max withdraw
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.MinDeposit">
            <summary>
            Min deposit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.MaxDeposit">
            <summary>
            Max deposit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.AssetPrecision">
            <summary>
            Asset precision
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.IsMemo">
            <summary>
            Is memo
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.Networks">
            <summary>
            Networks
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.Limits">
            <summary>
            Limits
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAsset.Confirmations">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitAssetNetworks">
            <summary>
            Deposit/withdrawal network info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAssetNetworks.Deposits">
            <summary>
            Deposits
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAssetNetworks.Withdraws">
            <summary>
            Withdraws
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAssetNetworks.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitAssetLimits">
            <summary>
            Asset limits
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAssetLimits.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAssetLimits.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitAssetLimit">
            <summary>
            
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitAssetLimit.Min">
            <summary>
            Min
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitBookUpdate">
            <summary>
            Trades update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBookUpdate.Snapshot">
            <summary>
            Is snapshot update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBookUpdate.OrderBook">
            <summary>
            Trades
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBookUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitBorrows">
            <summary>
            Borrows result
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrows.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrows.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitBorrow">
            <summary>
            Borrow info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrow.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrow.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrow.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrow.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrow.UnrealizedFunding">
            <summary>
            Unrealized funding
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitBorrow.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitCode">
            <summary>
            WhiteBit code
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCode.Code">
            <summary>
            Generated WhiteBit code
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCode.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCode.ExternalId">
            <summary>
            External id
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitCodeResult">
            <summary>
            Code application result
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCodeResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCodeResult.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCodeResult.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCodeResult.ExternalId">
            <summary>
            External id
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary">
            <summary>
            Account summary
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.Equity">
            <summary>
            Total equity of collateral balance including lending funds in USDT
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.Margin">
            <summary>
            Amount of funds in open position USDT
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.FreeMargin">
            <summary>
            Free funds for trading
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.UnrealizedFunding">
            <summary>
            Funding that will be paid on next position stage change (order, liquidation, etc)
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.Pnl">
            <summary>
            Current profit and loss in USDT
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.Leverage">
            <summary>
            Current leverage of account which affect amount of lending funds
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.MarginFraction">
            <summary>
            Margin fraction
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralAccountSummary.MaintenanceMarginFraction">
            <summary>
            Maintenance margin fraction
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder">
            <summary>
            Collateral order info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.QuoteQuantityFilled">
            <summary>
            Filled quantity in quote asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.QuantityFilled">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.DealFee">
            <summary>
            Deal fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.ImmediateOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.Status">
            <summary>
            Closed order status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.StpMode">
            <summary>
            Self Trade Prevention mode
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrder.OneTriggersOtherConfig">
            <summary>
            Take profit or stop loss configuration
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrderConfig">
            <summary>
            OTO config
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrderConfig.OtoId">
            <summary>
            OTO id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrderConfig.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralOrderConfig.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitCollateralSummary">
            <summary>
            Balance summary
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralSummary.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralSummary.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralSummary.Borrow">
            <summary>
            Borrow
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralSummary.AvailableWithoutBorrow">
            <summary>
            Available without borrow
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitCollateralSummary.AvailableWithBorrow">
            <summary>
            Available with borrow
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrdersResult">
            <summary>
            Conditional orders
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrdersResult.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrdersResult.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrdersResult.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrdersResult.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders">
            <summary>
            Conditional order
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders.ConditionalOrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders.StopLossOrder">
            <summary>
            Stop loss order
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders.TakeProfitOrder">
            <summary>
            Take profit order
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrders.ConditionalOrder">
            <summary>
            Conditional order
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate">
            <summary>
            Conversion estimate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate.FromAsset">
            <summary>
            From asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate.ToAsset">
            <summary>
            To asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate.FromQuantity">
            <summary>
            From asset quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate.ToQuantity">
            <summary>
            To asset quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate.Rate">
            <summary>
            Conversion rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertEstimate.ExpireTime">
            <summary>
            Expire timestamp
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConvertHistory">
            <summary>
            Convert history
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistory.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistory.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistory.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistory.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntry">
            <summary>
            Convert history entry
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntry.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntry.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntry.FromQuantity">
            <summary>
            From quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntry.ToQuantity">
            <summary>
            To quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntry.Rate">
            <summary>
            Conversion rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntry.Path">
            <summary>
            Path
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntryPath">
            <summary>
            Convert path
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntryPath.FromAsset">
            <summary>
            From
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntryPath.ToAsset">
            <summary>
            To
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertHistoryEntryPath.Rate">
            <summary>
            Conversion rate
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConvertResult">
            <summary>
            Convert result
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertResult.FinalFromQuantity">
            <summary>
            Final from quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConvertResult.FinalToQuantity">
            <summary>
            Final to quantity
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositAddressInfo">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositAddressInfo.Account">
            <summary>
            Account
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositAddressInfo.FeeInfo">
            <summary>
            Fee info
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositAddress">
            <summary>
            Address info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositAddress.Memo">
            <summary>
            Memo
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositUrl">
            <summary>
            Fiat deposit url
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositUrl.Url">
            <summary>
            The deposit url
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawals">
            <summary>
            Deposit/withdrawal history
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawals.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawals.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawals.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawals.Total">
            <summary>
            Total number of results
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal">
            <summary>
            Deposit/withdrawal info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.UniqueId">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.AssetName">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Memo">
            <summary>
            Memo
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.TransactionStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.TransactionHash">
            <summary>
            Transaction hash
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Details">
            <summary>
            Details
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawal.Confirmations">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalDetails">
            <summary>
            Details
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalDetails.Partial">
            <summary>
            Partial
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalPartial">
            <summary>
            Partial
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalPartial.RequestQuantity">
            <summary>
            Request quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalPartial.ProcessedQuantity">
            <summary>
            Processed quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalPartial.ProcessedFee">
            <summary>
            Processed fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalPartial.NormalizeTransaction">
            <summary>
            Normalize transaction
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalConfirmations">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalConfirmations.Actual">
            <summary>
            Actual
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalConfirmations.Required">
            <summary>
            Required
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSetting">
            <summary>
            Withdrawal/deposit settings
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSetting.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSetting.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSetting.CanDeposit">
            <summary>
            Can deposit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSetting.CanWithdraw">
            <summary>
            Can withdraw
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSetting.Deposit">
            <summary>
            Deposit info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSetting.Withdraw">
            <summary>
            Withdraw info
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSettingDetails">
            <summary>
            Details
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSettingDetails.MinFlex">
            <summary>
            Min fee amount when flex fee is enabled
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSettingDetails.MaxFlex">
            <summary>
            Max fee amount when flex fee is enabled
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSettingDetails.PercentFlex">
            <summary>
            Flex fee percentage
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSettingDetails.Fixed">
            <summary>
            Fixed fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSettingDetails.MinQuantity">
            <summary>
            Min quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalSettingDetails.MaxQuantity">
            <summary>
            Max quantity
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdraw">
            <summary>
            Deposit/withdrawal info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdraw.CryptoInfo">
            <summary>
            Crypto info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdraw.FiatInfo">
            <summary>
            Fiat infos
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo">
            <summary>
            Deposit/withdrawal info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo.Providers">
            <summary>
            Providers
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo.IsDepositable">
            <summary>
            Is depositable
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo.IsWithdrawable">
            <summary>
            Is withdrawable
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo.IsApiWithdrawable">
            <summary>
            Is withdrawal via API allowed
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfo.IsApiDepositable">
            <summary>
            Is deposit via API allowed
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalCrypto">
            <summary>
            Crypto deposit/withdrawal info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalCrypto.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalCrypto.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalFiat">
            <summary>
            Crypto deposit/withdrawal info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalFiat.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawalFiat.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawDetails">
            <summary>
            Withdrawal/deposit limits/fees details
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawDetails.MinQuantity">
            <summary>
            Min quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawDetails.MaxQuantity">
            <summary>
            Max quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawDetails.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawDetails.Flex">
            <summary>
            Flex fees
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails">
            <summary>
            Provider
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.MinQuantity">
            <summary>
            Min quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.MaxQuantity">
            <summary>
            Max quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.Flex">
            <summary>
            Flex
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.IsDepositable">
            <summary>
            Is depositable
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.IsApiDepositable">
            <summary>
            Is api depositable
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.IsWithdrawable">
            <summary>
            Is withdrawable
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.IsApiWithdrawable">
            <summary>
            Is api withdrawable
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawProviderDetails.Ticker">
            <summary>
            Ticker
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfoFlex">
            <summary>
            Flex fee info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfoFlex.MinFee">
            <summary>
            Min fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfoFlex.MaxFee">
            <summary>
            Max fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitDepositWithdrawInfoFlex.Percent">
            <summary>
            Percent
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitError">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitError.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitError.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitError.Errors">
            <summary>
            Error messages
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol">
            <summary>
            
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.BaseVolume">
            <summary>
            Base asset volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.QuoteVolume">
            <summary>
            Quote asset volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.ProductType">
            <summary>
            Product type
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.IndexName">
            <summary>
            Index name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.IndexAsset">
            <summary>
            Index asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.NextFundingRateTime">
            <summary>
            Next funding rate timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.Brackets">
            <summary>
            Brackets
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitFuturesSymbol.MaxLeverage">
            <summary>
            Max leverage
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCodes">
            <summary>
            Generated codes history
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCodes.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCodes.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCodes.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCodes.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCode">
            <summary>
            Generated code
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCode.Quantity">
            <summary>
            Quantity, positive means code is applied, negative means code was created
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCode.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCode.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCode.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCode.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitGeneratedCode.ExternalId">
            <summary>
            External id
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitKillSwitch">
            <summary>
            Kill switch info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKillSwitch.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKillSwitch.StartTime">
            <summary>
            Start time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKillSwitch.CancellationTime">
            <summary>
            Cancellation time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKillSwitch.OrderProductTypes">
            <summary>
            Product types the kill switch is applied to
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate">
            <summary>
            Kline update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.OpenTime">
            <summary>
            Open timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.Volume">
            <summary>
            Volume in base asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitLastPriceUpdate">
            <summary>
            Last price update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitLastPriceUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitLastPriceUpdate.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitLeverage">
            <summary>
            Leverage setting
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitLeverage.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitMainBalance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMainBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMainBalance.MainBalance">
            <summary>
            Main balance
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitMarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMarginBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMarginBalance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMarginBalance.Borrow">
            <summary>
            Borrow
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMarginBalance.AvailableWithoutBorrow">
            <summary>
            Available without borrow
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMarginBalance.AvailableWithBorrow">
            <summary>
            Available with borrow
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitMiningRewards">
            <summary>
            Mining reward history
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningRewards.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningRewards.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningRewards.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitMiningReward">
            <summary>
            Reward info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningReward.AccountName">
            <summary>
            Mining account name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningReward.TotalReward">
            <summary>
            Total reward
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningReward.Reward">
            <summary>
            Reward
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningReward.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningReward.FppsRate">
            <summary>
            Fpps rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningReward.HashRate">
            <summary>
            Hash rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitMiningReward.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOcoOrder">
            <summary>
            OCO order
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOcoOrder.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOcoOrder.StopLossOrder">
            <summary>
            Stop loss order
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOcoOrder.TakeProfitOrder">
            <summary>
            Take profit order
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOrders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrders.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrders.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrders.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrders.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.CreateTime">
            <summary>
            Create timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.QuoteQuantityFilled">
            <summary>
            Filled quantity in quote asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.QuantityFilled">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.QuantityRemaining">
            <summary>
            Remaining quantity to be filled
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.Fee">
            <summary>
            Order fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.Price">
            <summary>
            Limit price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.ImmediateOrCancel">
            <summary>
            Immediate or cancel flag
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.Status">
            <summary>
            Closed order status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrder.StpMode">
            <summary>
            Self Trade Prevention mode
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrder">
            <summary>
            Conditional order
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrder.UpdateTime">
            <summary>
            Update timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrder.TriggerCondition">
            <summary>
            Trigger condition
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitConditionalOrder.Activated">
            <summary>
            Activated
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitClosedOrders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitClosedOrders.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitClosedOrders.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitClosedOrders.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitClosedOrders.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitClosedOrder">
            <summary>
            Closed order info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitClosedOrder.FillTime">
            <summary>
            Filled timestamp
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderBook.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderBook.Asks">
            <summary>
            Asks list
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderBook.Bids">
            <summary>
            Bids list
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderBookEntry.Price">
            <summary>
            The price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderBookEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest">
            <summary>
            Bulk order request
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.Price">
            <summary>
            Limit price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.ImmediateOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderRequest.StpMode">
            <summary>
            Self Trade Prevention mode
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOrderResponse">
            <summary>
            Bulk order response
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderResponse.Success">
            <summary>
            Whether the order was placed successfully
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderResponse.Error">
            <summary>
            Error message on fail
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderResponse.Result">
            <summary>
            Order result
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderUpdate.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitOrderUpdate.Order">
            <summary>
            Order info
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.OpenTime">
            <summary>
            Open timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.UpdateTime">
            <summary>
            Update timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.Value">
            <summary>
            Position value
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.BasePrice">
            <summary>
            Base price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.LiquidationStatus">
            <summary>
            Liquidation status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.Pnl">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.PnlPercent">
            <summary>
            Profit and loss percentage
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.Margin">
            <summary>
            Amount of funds in open position
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.FreeMargin">
            <summary>
            Free funds
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.Funding">
            <summary>
            Funding
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.UnrealizedFunding">
            <summary>
            Unrealized funding
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPosition.TpSl">
            <summary>
            Info on attached TP / SL orders for the position. Not available in websocket updates
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitPositionTpSl">
            <summary>
            Info on TakeProfit/StopLoss attached orders for a position
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionTpSl.TakeProfitId">
            <summary>
            Take profit order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionTpSl.TakeProfitPrice">
            <summary>
            Take profit price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionTpSl.StopLossId">
            <summary>
            Stop loss order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionTpSl.StopLossPrice">
            <summary>
            Stop loss price
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory">
            <summary>
            
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.ModifyDate">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.BasePrice">
            <summary>
            Base price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.RealizedFunding">
            <summary>
            Realized funding
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.LiquidationStatus">
            <summary>
            Liquidation status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistory.OrderDetail">
            <summary>
            Order detail
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitPositionHistoryOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistoryOrder.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistoryOrder.TradeQuantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistoryOrder.BasePrice">
            <summary>
            Base price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistoryOrder.TradeFee">
            <summary>
            Trade fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistoryOrder.FundingFee">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionHistoryOrder.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitPositionsUpdate">
            <summary>
            Positions
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionsUpdate.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionsUpdate.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.Quantity">
            <summary>
            Position quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.Value">
            <summary>
            Position value
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.BasePrice">
            <summary>
            Base price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.UnrealizedPnl">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.LiquidationStage">
            <summary>
            Liquidation stage
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.UnrealizedFunding">
            <summary>
            Unrealized funding
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.Funding">
            <summary>
            Funding
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.Margin">
            <summary>
            Margin
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.FreeMargin">
            <summary>
            Free margin
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitPositionUpdate.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker">
            <summary>
            Ticker
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.Period">
            <summary>
            Period
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.OpenPrice">
            <summary>
            Open price last 24h
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.HighPrice">
            <summary>
            High price last 24h
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.LowPrice">
            <summary>
            Low price last 24h
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTicker.QuoteVolume">
            <summary>
            Volume in quote asset
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSocketTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTrade.Quantity">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTrade.Timestamp">
            <summary>
            Trade timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSocketTrade.Side">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSubAccount">
            <summary>
            Sub account info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.Alias">
            <summary>
            Alias
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.Kyc">
            <summary>
            Kyc
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccount.Permissions">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSubAccountKyc">
            <summary>
            Kyc info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccountKyc.ShareKyc">
            <summary>
            Share kyc
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccountKyc.KycStatus">
            <summary>
            Kyc status
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSubAccountPermissions">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccountPermissions.SpotEnabled">
            <summary>
            Spot enabled
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccountPermissions.CollateralEnabled">
            <summary>
            Collateral enabled
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSubAccounts">
            <summary>
            Sub account list
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccounts.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccounts.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubAccounts.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferHistory">
            <summary>
            Transfer history
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferHistory.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferHistory.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferHistory.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferEntry">
            <summary>
            Transfer entry
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferEntry.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferEntry.Direction">
            <summary>
            Transfer direction
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferEntry.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubaccountTransferEntry.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSubBalances">
            <summary>
            Sub balances
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubBalances.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubBalances.Main">
            <summary>
            Main
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubBalances.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSubBalances.Collateral">
            <summary>
            Collateral
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.BaseAssetPrecision">
            <summary>
            Base asset precision
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.QuoteAssetPrecision">
            <summary>
            Quote asset precision
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.FeePrecision">
            <summary>
            Fee precision
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.MinOrderQuantity">
            <summary>
            Min order quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.MinOrderValue">
            <summary>
            Min order value
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.MaxOrderValue">
            <summary>
            Max order value
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.TradingEnabled">
            <summary>
            If trading is enabled
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.IsMarginEnabled">
            <summary>
            Is margin trading enabled
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSymbol.SymbolType">
            <summary>
            Type of symbol
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitSystemStatus">
            <summary>
            System status
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitSystemStatus.SystemStatus">
            <summary>
            Status of the platform
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.BaseId">
            <summary>
            Base id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.QuoteId">
            <summary>
            Quote id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.LastPrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.IsFrozen">
            <summary>
            Is frozen
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTicker.ChangePercentage">
            <summary>
            Change percentage
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTickerUpdate">
            <summary>
            Ticker update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTickerUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTickerUpdate.Ticker">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTime">
            <summary>
            Server time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTime.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTrade.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTrade.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTrade.Timestamp">
            <summary>
            Trade timestamp
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTrade.Side">
            <summary>
            Trade side
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTradeBalance">
            <summary>
            Trade balance
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradeBalance.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradeBalance.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradeBalance.Frozen">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTradeUpdate">
            <summary>
            Trades update
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradeUpdate.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTradingFee">
            <summary>
            Trading fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradingFee.TakerFee">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradingFee.MakerFee">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitTradingFees">
            <summary>
            Trading fees
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradingFees.TakerFee">
            <summary>
            Taker fee rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradingFees.MakerFee">
            <summary>
            Maker fee rate
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitTradingFees.CustomFees">
            <summary>
            Fees for symbols which are different from the default fees
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitUserTrades">
            <summary>
            User trades
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrades.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrades.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrades.Total">
            <summary>
            Total 
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrades.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitUserTrade">
            <summary>
            User trade
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.Time">
            <summary>
            Trade time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.TradeRole">
            <summary>
            Role of the trade
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.Value">
            <summary>
            Value in quote asset
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTrade.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate">
            <summary>
            User trade
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.Time">
            <summary>
            Trade time
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate.FeeAsset">
            <summary>
            Asset the fee is in
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Options.WhiteBitOptions">
            <summary>
            WhiteBit options
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions">
            <summary>
            Options for the WhiteBit SymbolOrderBook
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions.Limit">
            <summary>
            The top amount of results to keep in sync. If for example limit=10 is used, the order book will contain the 10 best bids and 10 best asks. Leaving this null will sync the full order book
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Options.WhiteBitRestOptions">
            <summary>
            Options for the WhiteBitRestClient
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Options.WhiteBitRestOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitRestOptions.V4Options">
            <summary>
            V4 API options
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitRestOptions.EnableNonceWindow">
            <summary>
            When true, request nonces are allowed to be out of order by the server at least as they are within a 5 second window. This allows concurrent requests to succeed during high traffic.
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Options.WhiteBitSocketOptions">
            <summary>
            Options for the WhiteBitSocketClient
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Options.WhiteBitSocketOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.Options.WhiteBitSocketOptions.V4Options">
            <summary>
            V4 API options
            </summary>
        </member>
        <member name="T:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitBookSubscription">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitBookSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitBookSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitBookSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitBookUpdate}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitBookSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitBookSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitBookSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitClosedOrderSubscription">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitClosedOrderSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitClosedOrderSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitClosedOrderSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitClosedOrder}}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitClosedOrderSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitClosedOrderSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitClosedOrderSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitKlineSubscription">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitKlineSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitKlineSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitKlineSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,WhiteBit.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitKlineUpdate}}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitKlineSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitKlineSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitKlineSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitMarginBalanceSubscription">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitMarginBalanceSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitMarginBalanceSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitMarginBalanceSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{WhiteBit.Net.Objects.Models.WhiteBitMarginBalance}}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitMarginBalanceSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitMarginBalanceSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitMarginBalanceSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSpotBalanceSubscription">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSpotBalanceSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSpotBalanceSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSpotBalanceSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.Dictionary{System.String,WhiteBit.Net.Objects.Models.WhiteBitTradeBalance}}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSpotBalanceSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSpotBalanceSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSpotBalanceSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSubscription`1">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSubscription`1.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSubscription`1.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.String[],System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{`0}},System.Boolean,System.Boolean)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSubscription`1.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitUserTradeSubscription">
            <inheritdoc />
        </member>
        <member name="P:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitUserTradeSubscription.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitUserTradeSubscription.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitUserTradeSubscription.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{WhiteBit.Net.Objects.Models.WhiteBitUserTradeUpdate}})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitUserTradeSubscription.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitUserTradeSubscription.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.Objects.Sockets.Subscriptions.WhiteBitUserTradeSubscription.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.Objects.WhiteBitApiAddresses">
            <summary>
            Api addresses
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.WhiteBitApiAddresses.RestClientAddress">
            <summary>
            The address used by the WhiteBitRestClient for the API
            </summary>
        </member>
        <member name="P:WhiteBit.Net.Objects.WhiteBitApiAddresses.SocketClientAddress">
            <summary>
            The address used by the WhiteBitSocketClient for the websocket API
            </summary>
        </member>
        <member name="F:WhiteBit.Net.Objects.WhiteBitApiAddresses.Default">
            <summary>
            The default addresses to connect to the WhiteBit API
            </summary>
        </member>
        <member name="T:WhiteBit.Net.SymbolOrderBooks.WhiteBitOrderBookFactory">
            <summary>
            WhiteBit order book factory
            </summary>
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="P:WhiteBit.Net.SymbolOrderBooks.WhiteBitOrderBookFactory.V4">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitOrderBookFactory.CreateV4(System.String,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.SymbolOrderBooks.WhiteBitV4SymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitV4SymbolOrderBook.#ctor(System.String,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitV4SymbolOrderBook.#ctor(System.String,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,WhiteBit.Net.Interfaces.Clients.IWhiteBitRestClient,WhiteBit.Net.Interfaces.Clients.IWhiteBitSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="restClient">Rest client instance</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitV4SymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitV4SymbolOrderBook.DoReset">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitV4SymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.SymbolOrderBooks.WhiteBitV4SymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:WhiteBit.Net.WhiteBitEnvironment">
            <summary>
            WhiteBit environments
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitEnvironment.RestClientAddress">
            <summary>
            Rest API address
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitEnvironment.SocketClientAddress">
            <summary>
            Socket API address
            </summary>
        </member>
        <member name="M:WhiteBit.Net.WhiteBitEnvironment.#ctor">
            <summary>
            ctor for DI, use <see cref="M:WhiteBit.Net.WhiteBitEnvironment.CreateCustom(System.String,System.String,System.String)"/> for creating a custom environment
            </summary>
        </member>
        <member name="M:WhiteBit.Net.WhiteBitEnvironment.GetEnvironmentByName(System.String)">
            <summary>
            Get the WhiteBit environment by name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:WhiteBit.Net.WhiteBitEnvironment.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="spotRestAddress"></param>
            <param name="spotSocketStreamsAddress"></param>
            <returns></returns>
        </member>
        <member name="T:WhiteBit.Net.WhiteBitExchange">
            <summary>
            WhiteBit exchange information and configuration
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitExchange.DisplayName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitExchange.ImageUrl">
            <summary>
            Url to exchange image
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitExchange.Type">
            <summary>
            Type of exchange
            </summary>
        </member>
        <member name="M:WhiteBit.Net.WhiteBitExchange.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <summary>
            Format a base and quote asset to an WhiteBit recognized symbol 
            </summary>
            <param name="baseAsset">Base asset</param>
            <param name="quoteAsset">Quote asset</param>
            <param name="tradingMode">Trading mode</param>
            <param name="deliverTime">Delivery time for delivery futures</param>
            <returns></returns>
        </member>
        <member name="P:WhiteBit.Net.WhiteBitExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the WhiteBit API
            </summary>
        </member>
        <member name="T:WhiteBit.Net.WhiteBitRateLimiters">
            <summary>
            Rate limiter configuration for the WhiteBit API
            </summary>
        </member>
        <member name="E:WhiteBit.Net.WhiteBitRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="T:WhiteBit.Net.WhiteBitTrackerFactory">
            <inheritdoc />
        </member>
        <member name="M:WhiteBit.Net.WhiteBitTrackerFactory.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:WhiteBit.Net.WhiteBitTrackerFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:WhiteBit.Net.WhiteBitTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.WhiteBit(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the WhiteBit REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.WhiteBit(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the WhiteBit Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddWhiteBit(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add services such as the IWhiteBitRestClient and IWhiteBitSocketClient. Configures the services based on the provided configuration.
            </summary>
            <param name="services">The service collection</param>
            <param name="configuration">The configuration(section) containing the options</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddWhiteBit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOptions})">
            <summary>
            Add services such as the IWhiteBitRestClient and IWhiteBitSocketClient. Services will be configured based on the provided options.
            </summary>
            <param name="services">The service collection</param>
            <param name="optionsDelegate">Set options for the WhiteBit services</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddWhiteBit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{WhiteBit.Net.Objects.Options.WhiteBitRestOptions},System.Action{WhiteBit.Net.Objects.Options.WhiteBitSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            DEPRECATED; use <see cref="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddWhiteBit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{WhiteBit.Net.Objects.Options.WhiteBitOptions})" /> instead
            </summary>
        </member>
    </members>
</doc>
