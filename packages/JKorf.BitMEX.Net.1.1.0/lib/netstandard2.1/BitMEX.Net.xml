<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BitMEX.Net</name>
    </assembly>
    <members>
        <member name="T:BitMEX.Net.BitMEXEnvironment">
            <summary>
            BitMEX environments
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXEnvironment.RestClientAddress">
            <summary>
            Rest API address
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXEnvironment.SocketClientAddress">
            <summary>
            Socket API address
            </summary>
        </member>
        <member name="M:BitMEX.Net.BitMEXEnvironment.#ctor">
            <summary>
            ctor for DI, use <see cref="M:BitMEX.Net.BitMEXEnvironment.CreateCustom(System.String,System.String,System.String)"/> for creating a custom environment
            </summary>
        </member>
        <member name="M:BitMEX.Net.BitMEXEnvironment.GetEnvironmentByName(System.String)">
            <summary>
            Get the BitMEX environment by name
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:BitMEX.Net.BitMEXEnvironment.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="spotRestAddress"></param>
            <param name="spotSocketStreamsAddress"></param>
            <returns></returns>
        </member>
        <member name="T:BitMEX.Net.BitMEXExchange">
            <summary>
            BitMEX exchange information and configuration
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXExchange.DisplayName">
            <summary>
            Display exchange name
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXExchange.ImageUrl">
            <summary>
            Url to exchange image
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="P:BitMEX.Net.BitMEXExchange.Type">
            <summary>
            Type of exchange
            </summary>
        </member>
        <member name="M:BitMEX.Net.BitMEXExchange.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <summary>
            Format a base and quote asset to an BitMEX recognized symbol 
            </summary>
            <param name="baseAsset">Base asset</param>
            <param name="quoteAsset">Quote asset</param>
            <param name="tradingMode">Trading mode</param>
            <param name="deliverTime">Delivery time for delivery futures</param>
            <returns></returns>
        </member>
        <member name="P:BitMEX.Net.BitMEXExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the BitMEX API
            </summary>
        </member>
        <member name="T:BitMEX.Net.BitMEXRateLimiters">
            <summary>
            Rate limiter configuration for the BitMEX API
            </summary>
        </member>
        <member name="E:BitMEX.Net.BitMEXRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="T:BitMEX.Net.BitMEXTrackerFactory">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.BitMEXTrackerFactory.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:BitMEX.Net.BitMEXTrackerFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:BitMEX.Net.BitMEXTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.BitMEXUtils">
            <summary>
            Utility methods for BitMEX
            </summary>
        </member>
        <member name="M:BitMEX.Net.BitMEXUtils.UpdateSymbolInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Update the cached symbol and asset info. This should be called before using other methods in this class.
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.BitMEXUtils.GetAssetScale(System.String)">
            <summary>
            Get the scale of an asset.
            </summary>
            <param name="asset">Asset name</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.BitMEXUtils.GetSymbolQuantityScale(System.String)">
            <summary>
            Get the scale of quantity for a symbol
            </summary>
            <param name="symbol">Symbol name</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.BitMEXUtils.GetSymbolType(System.String)">
            <summary>
            Get the type for a symbol
            </summary>
            <param name="symbol">Symbol name</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.BitMEXUtils.GetAssetFromCurrency(System.String)">
            <summary>
            Get asset name for a currency
            </summary>
            <param name="currency">Currency name</param>
            <returns></returns>
        </member>
        <member name="T:BitMEX.Net.Clients.BitMEXRestClient">
            <inheritdoc cref="T:BitMEX.Net.Interfaces.Clients.IBitMEXRestClient" />
        </member>
        <member name="P:BitMEX.Net.Clients.BitMEXRestClient.ExchangeApi">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXRestClient.#ctor(System.Action{BitMEX.Net.Objects.Options.BitMEXRestOptions})">
            <summary>
            Create a new instance of the BitMEXRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{BitMEX.Net.Objects.Options.BitMEXRestOptions})">
            <summary>
            Create a new instance of the BitMEXRestClient using provided options
            </summary>
            <param name="options">Option configuration</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXRestClient.SetDefaultOptions(System.Action{BitMEX.Net.Objects.Options.BitMEXRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Clients.BitMEXSocketClient">
            <inheritdoc cref="T:BitMEX.Net.Interfaces.Clients.IBitMEXSocketClient" />
        </member>
        <member name="P:BitMEX.Net.Clients.BitMEXSocketClient.ExchangeApi">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXSocketClient.#ctor(System.Action{BitMEX.Net.Objects.Options.BitMEXSocketOptions})">
            <summary>
            Create a new instance of BitMEXSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXSocketClient.#ctor(Microsoft.Extensions.Options.IOptions{BitMEX.Net.Objects.Options.BitMEXSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of BitMEXSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="options">Option configuration</param>
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXSocketClient.SetDefaultOptions(System.Action{BitMEX.Net.Objects.Options.BitMEXSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:BitMEX.Net.Clients.BitMEXSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi">
            <inheritdoc cref="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApi" />
        </member>
        <member name="P:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.Account">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.Trading">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApi.SharedClient">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetUserEventsAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetFeesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetMarginStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetQuoteFillRatioAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetQuoteValueRatioAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetTradingVolumeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetBalanceHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetBalanceSummaryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.TransferAsync(System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.WithdrawAsync(System.String,System.String,System.Int64,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.SetIsolatedMarginAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.SetRiskLimitAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.TransferMarginAsync(System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetSavedAddressesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.AddSavedAddressAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetAddressBookSettingsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetActiveSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetSymbolsAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetActiveIntervalsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetCompositeIndexesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetIndicesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetSymbolVolumesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetTradesAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetKlinesAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetExchangeStatsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetExchangeStatHistoryAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetExchangeStatHistoryUSDAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetSettlementHistoryAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetBookTickerHistoryAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetAggregatedBookTickerHistoryAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetInsuranceAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetFundingHistoryAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetAnnouncementsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetUrgentAnnouncementsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetAssetNetworksAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiExchangeData.GetLiquidationsAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.PlaceOrderAsync(System.String,BitMEX.Net.Enums.OrderSide,BitMEX.Net.Enums.OrderType,System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{BitMEX.Net.Enums.TimeInForce},System.Nullable{BitMEX.Net.Enums.ExecutionInstruction},System.Nullable{BitMEX.Net.Enums.ContingencyType},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{BitMEX.Net.Enums.PeggedPriceType},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.EditOrderAsync(System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.GetOrdersAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.GetExecutionHistoryByDayAsync(System.String,System.DateTime,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.CancelOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.CancelAllOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.CancelAllAfterAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.GetUserExecutionsAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.GetUserTradesAsync(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.GetPositionsAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.SetCrossMarginLeverageAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXRestClientExchangeApiTrading.SetIsolatedMarginLeverageAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi">
            <summary>
            Client providing access to the BitMEX Exchange websocket Api
            </summary>
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.#ctor(Microsoft.Extensions.Logging.ILogger,BitMEX.Net.Objects.Options.BitMEXSocketOptions)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.CreateAccessor">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.CreateSerializer">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXTradeUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToKlineUpdatesAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXAggTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXAggTrade}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToAggregatedBookTickerUpdatesAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToAggregatedBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToSettlementUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXSettlementHistory}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.String,BitMEX.Net.Enums.IncrementalBookLimit,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookIncrementalUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},BitMEX.Net.Enums.IncrementalBookLimit,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookIncrementalUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXLiquidation}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToInsuranceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXInsurance}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToSymbolUpdatesAsync(System.Nullable{BitMEX.Net.Enums.SymbolCategory},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXSymbolUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToSymbolUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXSymbolUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToSymbolUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXSymbolUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToFundingUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXFundingRate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToFundingUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXFundingRate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToAnnouncementUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXAnnouncement}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToNotificationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXNotification}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXBalance}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToTransactionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXTransaction}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXPosition}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToMarginUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXMarginStatus}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXOrder}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXExecution}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.SharedClient">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Clients.ExchangeApi.BitMEXSocketClientExchangeApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Enums.AssetType">
            <summary>
            Asset type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.AssetType.Crypto">
            <summary>
            Crypto asset
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.AssetType.Synthetic">
            <summary>
            Synthetic asset
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.BinPeriod">
            <summary>
            Bin period
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BinPeriod.OneMinute">
            <summary>
            One minute
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BinPeriod.FiveMinutes">
            <summary>
            Five minutes
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BinPeriod.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BinPeriod.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.BookUpdateType">
            <summary>
            Book type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BookUpdateType.Snapshot">
            <summary>
            Snapshot
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BookUpdateType.Insert">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BookUpdateType.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.BookUpdateType.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.ContingencyType">
            <summary>
            Contingency type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ContingencyType.OneCancelsTheOther">
            <summary>
            One cancels other order linked with clientOrderLinkId
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ContingencyType.OneTriggersTheOther">
            <summary>
            One triggers other order linked with clientOrderLinkId
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.EventStatus">
            <summary>
            Event status
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventStatus.Failure">
            <summary>
            Failure
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.EventType">
            <summary>
            
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.ApiKeyCreated">
            <summary>
            Api key created
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.DeleverageExecution">
            <summary>
            Deleverage execution
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.DepositConfirmed">
            <summary>
            Deposit confirmed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.DepositPending">
            <summary>
            Deposit pending
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.BanZeroVolumeApiUser">
            <summary>
            Ban zero volume api user
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.LiquidationOrderPlaced">
            <summary>
            Liquidation order placed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.Login">
            <summary>
            Login
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.ExistingAccountRegistrationAttempt">
            <summary>
            Existing account registration attempt
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.PasswordChanged">
            <summary>
            Password changed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.PositionStateLiquidated">
            <summary>
            Position state liquidated
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.PositionStateWarning">
            <summary>
            Position state warning
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.ResetPasswordConfirmed">
            <summary>
            Reset password confirmed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.ResetPasswordRequest">
            <summary>
            Reset password request
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TradingBotStopped">
            <summary>
            Trading bot stopped
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TransferCanceled">
            <summary>
            Transfer canceled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TransferCompleted">
            <summary>
            Transfer completed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TransferReceived">
            <summary>
            Transfer received
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TransferRequested">
            <summary>
            Transfer requested
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TwoFactorDisabled">
            <summary>
            2FA disabled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TwoFactorEnabled">
            <summary>
            2FA enabled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.TwoFactorResetCodeCreated">
            <summary>
            2FA reset codes created
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.WithdrawalCanceled">
            <summary>
            Withdrawal canceled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.WithdrawalCompleted">
            <summary>
            Withdrawal completed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.WithdrawalConfirmed">
            <summary>
            Withdrawal confirmed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.WithdrawalRequested">
            <summary>
            Withdrawal requested
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.AddressCreated">
            <summary>
            Address created
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.AddressRemoved">
            <summary>
            Address removed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.AddressVerified">
            <summary>
            Address verified
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.AddressSkipConfirmRequested">
            <summary>
            Address skip confirm requested
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.AddressSkipConfirmVerified">
            <summary>
            Address skip confirm verified
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.AddressCooldownUpdated">
            <summary>
            Address cooldown updated
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.AddressConfigUpdated">
            <summary>
            Address config updated
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.Verify">
            <summary>
            Verify
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.RestrictedAccount">
            <summary>
            Restricted account
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.UnrestrictedAccount">
            <summary>
            Unrestricted account
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.DisabledAccount">
            <summary>
            Disabled account
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.EnabledAccount">
            <summary>
            Enabled account
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.RoleMappingDestroy">
            <summary>
            Role mapping destory
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.RoleChatBanned">
            <summary>
            Role chat banned
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.RoleWithdrawalBanned">
            <summary>
            Role withdrawal banned
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.RoleOrderBanned">
            <summary>
            Role order banned
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.RoleApiBanned">
            <summary>
            Role api banned
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.EventType.RoleRestrictedJurisdictionPrivilege">
            <summary>
            Role restricted jurisdication privilege
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.ExecutionInstruction">
            <summary>
            Execution instructions
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.PostOnly">
            <summary>
            Post only order
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.AllOrNone">
            <summary>
            All or none
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.MarkPrice">
            <summary>
            Mark price as trigger price type for Stop and If-Touched orders
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.IndexPrice">
            <summary>
            Index price as trigger price type for Stop and If-Touched orders
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.LastPrice">
            <summary>
            Last price as trigger price type for Stop and If-Touched orders
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.Close">
            <summary>
            Close implies ReduceOnly. A Close order will cancel other active limit orders with the same side and symbol if the open quantity exceeds the current position
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.Fixed">
            <summary>
            Pegged orders must have an execInst of Fixed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionInstruction.LastWithinMark">
            <summary>
            Last within mark
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.ExecutionType">
            <summary>
            Execution type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionType.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionType.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionType.Funding">
            <summary>
            Funding
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.ExecutionType.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.FairMethod">
            <summary>
            Fair method
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.FairMethod.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.FairMethod.ImpactMidPrice">
            <summary>
            Impact mid price
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.IncrementalBookLimit">
            <summary>
            Book limit
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.IncrementalBookLimit.Top25">
            <summary>
            Top 25 order book
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.IncrementalBookLimit.Full">
            <summary>
             Full order book
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.TickDirection">
            <summary>
            Tick direction 
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TickDirection.ZeroMinusTick">
            <summary>
            Minus zero tick
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TickDirection.MinusTick">
            <summary>
            Minus tick
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TickDirection.ZeroPlusTick">
            <summary>
            Up zero tick
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TickDirection.PlusTick">
            <summary>
            Up tick
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.MarkMethod">
            <summary>
            Mark method
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.MarkMethod.FairPrice">
            <summary>
            Fair price
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.MarkMethod.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.MarkMethod.LastPriceProtected">
            <summary>
            Last price protected
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.MarkMethod.IndicativeSettlePrice">
            <summary>
            Indicative settle price
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderStatus.New">
            <summary>
            New order
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderType.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderType.StopMarket">
            <summary>
            Market stop order
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderType.StopLimit">
            <summary>
            Limit stop order
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderType.MarketIfTouched">
            <summary>
            Similar to a Stop, but triggers are done in the opposite direction. Useful for Take Profit Market orders.
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderType.LimitIfTouched">
            <summary>
            Similar to a Stop, but triggers are done in the opposite direction. Useful for Take Profit Limit orders.
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.OrderType.Pegged">
            <summary>
            Pegged orders allow users to submit a limit price relative to the current market price
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.PeggedPriceType">
            <summary>
            Peg price type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.PeggedPriceType.MarketPeg">
            <summary>
            Market peg
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.PeggedPriceType.PrimaryPeg">
            <summary>
            Primary peg
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.PeggedPriceType.TrailingStopPeg">
            <summary>
            Trailing stop peg
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SettlementType.Settlement">
            <summary>
            Settlement
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.SymbolCategory">
            <summary>
            Category
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolCategory.Contracts">
            <summary>
            Contracts
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolCategory.Indices">
            <summary>
            Indices
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolCategory.Derivatives">
            <summary>
            Derivatives
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolCategory.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.SymbolFilter">
            <summary>
            Symbol filter
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolFilter.Nearest">
            <summary>
            Nearest expiring contract
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolFilter.Daily">
            <summary>
            Daily
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolFilter.Weekly">
            <summary>
            Weekly
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolFilter.Monthly">
            <summary>
            Monthly
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolFilter.Quarterly">
            <summary>
            Quarterly
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolFilter.BiQuarterly">
            <summary>
            Bi-quarterly
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolFilter.Perpetual">
            <summary>
            Perpetual
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.SymbolStatus">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolStatus.Unlisted">
            <summary>
            Unlisted
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolStatus.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolStatus.Closed">
            <summary>
            Closed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolStatus.Settled">
            <summary>
            Settled
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.SymbolType">
            <summary>
            Symbol type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.PerpetualContract">
            <summary>
            Perpetual Contracts
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.PerpetualContractFX">
            <summary>
            Perpetual Contracts (FX underliers)
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.PredictionMarket">
            <summary>
            Prediction Market
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.UnknownFXXXS">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.UnknownFMXXS">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.Futures">
            <summary>
            Futures
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.BitMEXBasketIndex">
            <summary>
            BitMEX Basket Index
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.BitMEXCryptoIndex">
            <summary>
            BitMEX Crypto Index
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.BitMEXFXIndex">
            <summary>
            BitMEX FX Index
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.BitMEXLendingPremiumIndex">
            <summary>
            BitMEX Lending/Premium Index
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.SymbolType.BitMEXVolatilityIndex">
            <summary>
            BitMEX Volatility Index
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TimeInForce.Day">
            <summary>
            Current day
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TimeInForce.GoodTillCancel">
            <summary>
            Good until canceled
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TimeInForce.AtTheClose">
            <summary>
            At the close
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.TradeRole">
            <summary>
            Trade role
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TradeRole.Maker">
            <summary>
            Maker
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TradeRole.Taker">
            <summary>
            Taker
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.TransactionStatus">
            <summary>
            Transaction status
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TransactionStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TransactionStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="T:BitMEX.Net.Enums.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TransactionType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:BitMEX.Net.Enums.TransactionType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="T:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods">
            <summary>
            Extension methods specific to using the BitMEX API
            </summary>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToSharedAssetQuantity(System.Int64,System.String)">
            <summary>
            Convert a BitMEX quantity to a normalized quantity
            </summary>
            <param name="value">Value</param>
            <param name="asset">The asset in which the quantity is</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToSharedSymbolQuantity(System.Int64,System.String)">
            <summary>
            Convert a BitMEX quantity to a normalized quantity
            </summary>
            <param name="value">Value</param>
            <param name="symbol">The symbol for which the quantity is</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToSharedAssetQuantity(System.Nullable{System.Int64},System.String)">
            <summary>
            Convert a BitMEX quantity to a normalized quantity
            </summary>
            <param name="value">Value</param>
            <param name="asset">The asset in which the quantity is</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToSharedSymbolQuantity(System.Nullable{System.Int64},System.String)">
            <summary>
            Convert a BitMEX quantity to a normalized quantity
            </summary>
            <param name="value">Value</param>
            <param name="symbol">The symbol for which the quantity is</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToBitMEXAssetQuantity(System.Decimal,System.String)">
            <summary>
            Convert a normalized quantity to a BitMEX quantity
            </summary>
            <param name="value">Value</param>
            <param name="asset">The asset which the quantity is in</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToBitMEXAssetQuantity(System.Nullable{System.Decimal},System.String)">
            <summary>
            Convert a normalized quantity to a BitMEX quantity
            </summary>
            <param name="value">Value</param>
            <param name="asset">The asset which the quantity is in</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToBitMEXSymbolQuantity(System.Decimal,System.String)">
            <summary>
            Convert a normalized quantity to a BitMEX quantity
            </summary>
            <param name="value">Value</param>
            <param name="symbol">The symbol for which the quantity is</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.ExtensionMethods.BitMEXExtensionMethods.ToBitMEXSymbolQuantity(System.Nullable{System.Decimal},System.String)">
            <summary>
            Convert a normalized quantity to a BitMEX quantity
            </summary>
            <param name="value">Value</param>
            <param name="symbol">The symbol for which the quantity is</param>
            <returns></returns>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApi">
            <summary>
            BitMEX Exchange API endpoints
            </summary>
        </member>
        <member name="P:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount">
            <summary>
            BitMEX Exchange account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetUserEventsAsync(System.Nullable{System.Int64},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user events
            <para><a href="https://www.bitmex.com/api/explorer/#!/UserEvent/UserEvent_get" /></para>
            </summary>
            <param name="fromId">From id</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get account info
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_get" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetFeesAsync(System.Threading.CancellationToken)">
            <summary>
            Get user trading fees
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getCommission" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetDepositAddressAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get deposit address
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getDepositAddress" /></para>
            </summary>
            <param name="asset">Asset name</param>
            <param name="network">Network</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetMarginStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get user margin status
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getMargin" /></para>
            </summary>
            <param name="symbol">Filter by symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetQuoteFillRatioAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get user order quote fill ratio
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getQuoteFillRatio" /></para>
            </summary>
            <param name="accountId">Account id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetQuoteValueRatioAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get user order quote value ratio
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getQuoteValueRatio" /></para>
            </summary>
            <param name="accountId">Account id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetTradingVolumeAsync(System.Threading.CancellationToken)">
            <summary>
            Get user 30 days average USD trading volume
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getTradingVolume" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetBalancesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get user balances
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getWallet" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetBalanceHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get balance history
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getWalletHistory" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="targetAccountId">Filter by account id</param>
            <param name="reverse">Reverse result order</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetBalanceSummaryAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get wallet summary
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getWalletSummary" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.TransferAsync(System.String,System.Int64,System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Transfer funds between accounts
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_walletTransfer" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="fromAccountId">From account id</param>
            <param name="toAccountId">To account id</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.WithdrawAsync(System.String,System.String,System.Int64,System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new withdrawal request
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_requestWithdrawal" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="network">Network</param>
            <param name="quantity">Quantity</param>
            <param name="address">Target address. One of address, addressId or targetUserId should be provided</param>
            <param name="memo">Target address memo</param>
            <param name="addressId">Address id. One of address, addressId or targetUserId should be provided</param>
            <param name="targetUserId">Target user id. One of address, addressId or targetUserId should be provided</param>
            <param name="fee">Network fee for Bitcoin withdrawals. If not specified, a default value will be calculated based on Bitcoin network conditions</param>
            <param name="text">Client text</param>
            <param name="otpToken">2FA token. Required for all external withdrawals unless the destination is a saved address with skip2FA configured.</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.CancelWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel a pending withdrawal request
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_cancelPendingWithdrawal" /></para>
            </summary>
            <param name="transactId">Transaction id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.SetIsolatedMarginAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set isolated margin enabled for a symbol
            <para><a href="https://www.bitmex.com/api/explorer/#!/Position/Position_isolateMargin" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="isolatedMarginEnabled">Isolated margin enabled</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.SetRiskLimitAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Update risk limit for a position
            <para><a href="https://www.bitmex.com/api/explorer/#!/Position/Position_updateRiskLimit" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="riskLimit">Risk limit</param>
            <param name="targetAccountId">Target account id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.TransferMarginAsync(System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Add or remove margin to an isolated margin position
            <para><a href="https://www.bitmex.com/api/explorer/#!/Position/Position_transferIsolatedMargin" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="quantity">Quantity to add or remove</param>
            <param name="targetAccountId">Target account id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetSavedAddressesAsync(System.Threading.CancellationToken)">
            <summary>
            Get saved addresses
            <para><a href="https://www.bitmex.com/api/explorer/#!/Address/Address_get" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.AddSavedAddressAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Add a saved address
            <para><a href="https://www.bitmex.com/api/explorer/#!/Address/Address_new" /></para>
            </summary>
            <param name="currency">Currency which the asset is for</param>
            <param name="network">Network of the address</param>
            <param name="address">Address</param>
            <param name="name">Address name</param>
            <param name="note">Address note</param>
            <param name="skipConfirm">Skip confirm</param>
            <param name="skip2FA">Skip 2FA</param>
            <param name="memo">Memo</param>
            <param name="otpToken">OTP token</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetAddressBookSettingsAsync(System.Threading.CancellationToken)">
            <summary>
            Get address book config
            <para><a href="https://www.bitmex.com/api/explorer/#/AddressConfig" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiAccount.GetApiKeyInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get API key info
            <para><a href="https://www.bitmex.com/api/explorer/#/APIKey" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData">
            <summary>
            BitMEX Exchange exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get server time
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetActiveSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get active symbols
            <para><a href="https://www.bitmex.com/api/explorer/#!/Instrument/Instrument_getActive" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetSymbolsAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get all symbols matching the filters
            <para><a href="https://www.bitmex.com/api/explorer/#!/Instrument/Instrument_get" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetActiveIntervalsAsync(System.Threading.CancellationToken)">
            <summary>
            Get active intervals
            <para><a href="https://www.bitmex.com/api/explorer/#!/Instrument/Instrument_getActiveIntervals" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetCompositeIndexesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get composite indexes
            <para><a href="https://www.bitmex.com/api/explorer/#!/Instrument/Instrument_getCompositeIndex" /></para>
            </summary>
            <param name="symbol">Filter by symbol</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetIndicesAsync(System.Threading.CancellationToken)">
            <summary>
            Get indices
            <para><a href="https://www.bitmex.com/api/explorer/#!/Instrument/Instrument_getIndices" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetSymbolVolumesAsync(System.Threading.CancellationToken)">
            <summary>
            Get symbol USD volumes
            <para><a href="https://www.bitmex.com/api/explorer/#!/Instrument/Instrument_getUsdVolume" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetTradesAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get public trades
            <para><a href="https://www.bitmex.com/api/explorer/#!/Trade/Trade_get" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetKlinesAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines
            <para><a href="https://www.bitmex.com/api/explorer/#!/Trade/Trade_getBucketed" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="period">Period to aggregate by</param>
            <param name="partial">Whether to include the current unfished period</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetExchangeStatsAsync(System.Threading.CancellationToken)">
            <summary>
            Get exchange stats
            <para><a href="https://www.bitmex.com/api/explorer/#!/Stats/Stats_get" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetExchangeStatHistoryAsync(System.Threading.CancellationToken)">
            <summary>
            Get exchange stat history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Stats/Stats_history" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetExchangeStatHistoryUSDAsync(System.Threading.CancellationToken)">
            <summary>
            Get exchange USD stats
            <para><a href="https://www.bitmex.com/api/explorer/#!/Stats/Stats_historyUSD" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetSettlementHistoryAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get settlement history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Settlement/Settlement_get" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetBookTickerHistoryAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get book ticker history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Quote/Quote_get" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetAggregatedBookTickerHistoryAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get aggregated book ticker history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Quote/Quote_getBucketed" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="period">Period to aggregate by</param>
            <param name="partial">Whether to include the current unfished period</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://www.bitmex.com/api/explorer/#!/OrderBook/OrderBook_getL2" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="limit">Number of rows</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetInsuranceAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get insurance history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Insurance/Insurance_get" /></para>
            </summary>
            <param name="asset">Filter by asset. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetFundingHistoryAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding rate history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Funding/Funding_get" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetAnnouncementsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get public announcements
            <para><a href="https://www.bitmex.com/api/explorer/#!/Announcement/Announcement_get" /></para>
            </summary>
            <param name="columns"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetUrgentAnnouncementsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get urgent announcements
            <para><a href="https://www.bitmex.com/api/explorer/#!/Announcement/Announcement_getUrgent" /></para>
            </summary>
            <param name="columns"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get assets
            <para><a href="https://www.bitmex.com/api/explorer/#!/Wallet/Wallet_getAssetsConfig" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetAssetNetworksAsync(System.Threading.CancellationToken)">
            <summary>
            Get asset networks
            <para><a href="https://www.bitmex.com/api/explorer/#!/Wallet/Wallet_getNetworksConfig" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiExchangeData.GetLiquidationsAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get liquidations
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiShared">
            <summary>
            Shared interface for Exchange rest API usage
            </summary>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading">
            <summary>
            BitMEX Exchange trading endpoints, placing and managing orders.
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.GetExecutionHistoryByDayAsync(System.String,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get user trade history by day
            <para><a href="https://www.bitmex.com/api/explorer/#!/User/User_getExecutionHistory" /></para>
            </summary>
            <param name="symbol">Symbol name</param>
            <param name="day">Day</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.PlaceOrderAsync(System.String,BitMEX.Net.Enums.OrderSide,BitMEX.Net.Enums.OrderType,System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{BitMEX.Net.Enums.TimeInForce},System.Nullable{BitMEX.Net.Enums.ExecutionInstruction},System.Nullable{BitMEX.Net.Enums.ContingencyType},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{BitMEX.Net.Enums.PeggedPriceType},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.bitmex.com/api/explorer/#!/Order/Order_new" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="orderSide">Order side</param>
            <param name="orderType">Order type</param>
            <param name="quantity">Quantity</param>
            <param name="price">Limit price</param>
            <param name="timeInForce">Time in force</param>
            <param name="executionInstruction">Execution instructions</param>
            <param name="contingencyType">Contingency type</param>
            <param name="displayQuantity">Display quantity</param>
            <param name="stopPrice">Stop price</param>
            <param name="pegOffsetValue">Peg offset value</param>
            <param name="pegPriceType">Peg price type</param>
            <param name="clientOrderLinkId">Client order link id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.GetOrdersAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user orders
            <para><a href="https://www.bitmex.com/api/explorer/#!/Order/Order_getOrders" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.EditOrderAsync(System.String,System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
            Edit an active order
            <para><a href="https://www.bitmex.com/api/explorer/#!/Order/Order_amend" /></para>
            </summary>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="origClientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="newClientOrderId">New client order id</param>
            <param name="quantity">New total order quantity</param>
            <param name="quantityRemaining">New order quantity remaining to execute</param>
            <param name="price">New price</param>
            <param name="stopPrice">New stop price</param>
            <param name="pegOffsetValue">New peg offset value</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.CancelOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            <para><a href="https://www.bitmex.com/api/explorer/#!/Order/Order_cancel" /></para>
            </summary>
            <param name="orderId">Order id. Either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id. Either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel orders
            <para><a href="https://www.bitmex.com/api/explorer/#!/Order/Order_cancel" /></para>
            </summary>
            <param name="orderIds">Order ids. Either this or clientOrderIds should be provided</param>
            <param name="clientOrderIds">Client order ids. Either this or orderIds should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.CancelAllOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Cancel all orders matching the parameters
            <para><a href="https://www.bitmex.com/api/explorer/#!/Order/Order_cancelAll" /></para>
            </summary>
            <param name="targetAccountIds">Account ids</param>
            <param name="symbol">Filter by symbol</param>
            <param name="filter">Filter orders to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.CancelAllAfterAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Cancel all orders after the timeout passes. Acts as a dead-man switch. Use TimeSpan.Zero to cancel timeout
            <para><a href="https://www.bitmex.com/api/explorer/#!/Order/Order_cancelAllAfter" /></para>
            </summary>
            <param name="timeout">Timeout after which to cancel all orders. Use TimeSpan.Zero to cancel timeout</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.GetUserExecutionsAsync(System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get raw user execution history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Execution/Execution_get" /></para>
            </summary>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.GetUserTradesAsync(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Nullable{BitMEX.Net.Enums.SymbolFilter},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get user trade history
            <para><a href="https://www.bitmex.com/api/explorer/#!/Execution/Execution_getTradeHistory" /></para>
            </summary>
            <param name="targetAccountIds">Target account ids</param>
            <param name="symbol">Filter by symbol. When sending an asset name (for example XBT) it will filter on nearest expiring contract by default, unless symbolFilter is specified</param>
            <param name="symbolFilter">Symbol additional filter when using an asset to filter</param>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="reverse">Reverse direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="offset">Result offset</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.GetPositionsAsync(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get positions
            <para><a href="https://www.bitmex.com/api/explorer/#!/Position/Position_get" /></para>
            </summary>
            <param name="filter">Filter on fields</param>
            <param name="columns">Filter columns</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.SetCrossMarginLeverageAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set cross margin leverage. Automatically enables cross margin.
            <para><a href="https://www.bitmex.com/api/explorer/#!/Position/Position_updateCrossLeverage" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="leverage">New leverage</param>
            <param name="targetAccountId">Target account id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXRestClientExchangeApiTrading.SetIsolatedMarginLeverageAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Set isolated margin leverage. Automatically enables isolated margin
            <para><a href="https://www.bitmex.com/api/explorer/#!/Position/Position_updateLeverage" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="leverage">New leverage</param>
            <param name="targetAccountId">Target account id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi">
            <summary>
            BitMEX Exchange streams
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trade updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol name</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXTradeUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to trade updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToKlineUpdatesAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXAggTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates. Note that this subscription only pushes an update when the period is finished. Updates during a kline will not be pushed.
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="period">Period</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXAggTrade}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="period">Period</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to book ticker updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToAggregatedBookTickerUpdatesAsync(System.String,BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to aggregated book ticker updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="period">Period</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToAggregatedBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},BitMEX.Net.Enums.BinPeriod,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXBookTicker}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to aggregated book ticker updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="period">Period</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToSettlementUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXSettlementHistory}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to settlement updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updated for the first 10 levels on each update
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updated for the first 10 levels on each update
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.String,BitMEX.Net.Enums.IncrementalBookLimit,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookIncrementalUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to incremental order book updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="limit">Limit</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},BitMEX.Net.Enums.IncrementalBookLimit,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXOrderBookIncrementalUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to incremental order book updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="limit">Limit</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXLiquidation}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToInsuranceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXInsurance}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to insurance updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToSymbolUpdatesAsync(System.Nullable{BitMEX.Net.Enums.SymbolCategory},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXSymbolUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="category">Optional category</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToSymbolUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXSymbolUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol updates. Note that only changed properties will be filled; unchanged properties will be null.
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToSymbolUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXSymbolUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToFundingUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXFundingRate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to funding rate updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToFundingUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXFundingRate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to funding rate updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="symbols">Symbols to subscribe</param>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToAnnouncementUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXAnnouncement}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to platform announcement updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToNotificationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXNotification}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to public short lived notifications
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXBalance}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user balance updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToTransactionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXTransaction}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user transaction (deposit/withdrawal) updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXPosition}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user position updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToMarginUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{BitMEX.Net.Objects.Models.BitMEXMarginStatus}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user margin updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXOrder}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user order updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SubscribeToUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BitMEX.Net.Objects.Models.BitMEXExecution}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to user trade updates
            <para><a href="https://www.bitmex.com/app/wsAPI" /></para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="P:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApi.SharedClient">
            <summary>
            Get the shared socket requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.ExchangeApi.IBitMEXSocketClientExchangeApiShared">
            <summary>
            Shared interface for Exchange socket API usage
            </summary>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.IBitMEXRestClient">
            <summary>
            Client for accessing the BitMEX Rest API. 
            </summary>
        </member>
        <member name="P:BitMEX.Net.Interfaces.Clients.IBitMEXRestClient.ExchangeApi">
            <summary>
            Exchange API endpoints
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.IBitMEXRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.IBitMEXRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:BitMEX.Net.Interfaces.Clients.IBitMEXSocketClient">
            <summary>
            Client for accessing the BitMEX websocket API
            </summary>
        </member>
        <member name="P:BitMEX.Net.Interfaces.Clients.IBitMEXSocketClient.ExchangeApi">
            <summary>
            Exchange API endpoints
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.IBitMEXSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:BitMEX.Net.Interfaces.Clients.IBitMEXSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:BitMEX.Net.Interfaces.IBitMEXOrderBookFactory">
            <summary>
            BitMEX local order book factory
            </summary>
        </member>
        <member name="P:BitMEX.Net.Interfaces.IBitMEXOrderBookFactory.Exchange">
            <summary>
            Exchange order book factory methods
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.IBitMEXOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{BitMEX.Net.Objects.Options.BitMEXOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:BitMEX.Net.Interfaces.IBitMEXOrderBookFactory.Create(System.String,System.Action{BitMEX.Net.Objects.Options.BitMEXOrderBookOptions})">
            <summary>
            Create a new Exchange local order book instance
            </summary>
        </member>
        <member name="T:BitMEX.Net.Interfaces.IBitMEXTrackerFactory">
            <summary>
            Tracker factory
            </summary>
        </member>
        <member name="M:BitMEX.Net.Interfaces.IBitMEXTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new trade tracker for a symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="T:BitMEX.Net.Objects.BitMEXApiAddresses">
            <summary>
            Api addresses
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.BitMEXApiAddresses.RestClientAddress">
            <summary>
            The address used by the BitMEXRestClient for the API
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.BitMEXApiAddresses.SocketClientAddress">
            <summary>
            The address used by the BitMEXSocketClient for the websocket API
            </summary>
        </member>
        <member name="F:BitMEX.Net.Objects.BitMEXApiAddresses.Default">
            <summary>
            The default addresses to connect to the BitMEX API
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Firstname">
            <summary>
            Firstname
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Lastname">
            <summary>
            Lastname
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Username">
            <summary>
            Username
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.AccountName">
            <summary>
            Account name
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.IsUser">
            <summary>
            Is user
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.DateOfBirth">
            <summary>
            Date of birth
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.CreateTime">
            <summary>
            CreateTime
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.LastUpdated">
            <summary>
            Last updated
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Preferences">
            <summary>
            Preferences
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.TFAEnabled">
            <summary>
            TFA enabled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.AffiliateId">
            <summary>
            Affiliate id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.GeoipCountry">
            <summary>
            Geo-ip country
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.GeoipRegion">
            <summary>
            Geo-ip region
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.FirstTradeTimestamp">
            <summary>
            First trade timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.FirstDepositTimestamp">
            <summary>
            First deposit timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.IsElite">
            <summary>
            Is elite
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences">
            <summary>
            Preferences
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.AlertOnLiquidations">
            <summary>
            Alert on liquidations
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.AnimationsEnabled">
            <summary>
            Animations enabled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.AnnouncementsLastSeen">
            <summary>
            Announcements last seen
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.BotsAdvancedMode">
            <summary>
            Bots advanced mode
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.BotVideosHidden">
            <summary>
            Bot videos hidden
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.ChatChannelId">
            <summary>
            Chat channel id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.ColorTheme">
            <summary>
            Color theme
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.DisableEmails">
            <summary>
            Disable emails
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.DisablePush">
            <summary>
            Disable push
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.DisplayCorpEnrollUpsell">
            <summary>
            Display corp enroll upsell
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.EquivalentAsset">
            <summary>
            Equivalent asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.Features">
            <summary>
            Features
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.Favourites">
            <summary>
            Favourites
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.FavouritesAssets">
            <summary>
            Favourites assets
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.FavouritesOrdered">
            <summary>
            Favourites ordered
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.FavouriteBots">
            <summary>
            Favourite bots
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.FavouriteContracts">
            <summary>
            Favourite contracts
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HasSetTradingCurrencies">
            <summary>
            Has set trading currencies
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HideConfirmDialogs">
            <summary>
            Hide confirm dialogs
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HideConnectionModal">
            <summary>
            Hide connection modal
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HideFromLeaderboard">
            <summary>
            Hide from leaderboard
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HideNameFromLeaderboard">
            <summary>
            Hide name from leaderboard
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HidePnlInGuilds">
            <summary>
            Hide profit and loss in guilds
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HideRoiInGuilds">
            <summary>
            Hide return on investment in guilds
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HideNotifications">
            <summary>
            Hide notifications
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.HidePhoneConfirm">
            <summary>
            Hide phone confirm
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.GuidesShownVersion">
            <summary>
            Guides shown version
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.IsSensitiveInfoVisible">
            <summary>
            Is sensitive info visible
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.IsWalletZeroBalanceHidden">
            <summary>
            Is wallet zero balance hidden
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.Locale">
            <summary>
            Locale
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.LocaleSetTime">
            <summary>
            Locale set time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.MarginPnlRow">
            <summary>
            Margin profit and loss row
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.MarginPnlRowKind">
            <summary>
            Margin profit and loss row kind
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.MobileLocale">
            <summary>
            Mobile locale
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.MessagesSeen">
            <summary>
            Msgs seen
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.OptionsBeta">
            <summary>
            Options beta
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.OrderBookType">
            <summary>
            Order book type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.OrderClearImmediate">
            <summary>
            Order clear immediate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.OrderControlsPlusMinus">
            <summary>
            Order controls plus minus
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.OrderInputType">
            <summary>
            Order input type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.PlatformLayout">
            <summary>
            Platform layout
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.SelectedFiatAsset">
            <summary>
            Selected fiat asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.ShowChartBottomToolbar">
            <summary>
            Show chart bottom toolbar
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.ShowLocaleNumbers">
            <summary>
            Show locale numbers
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.Sounds">
            <summary>
            Sounds
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.SpacingPreference">
            <summary>
            Spacing preference
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.StrictIPCheck">
            <summary>
            Strict ip check
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.StrictTimeout">
            <summary>
            Strict timeout
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.TickerGroup">
            <summary>
            Ticker group
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.TickerPinned">
            <summary>
            Ticker pinned
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.TradeLayout">
            <summary>
            Trade layout
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.UserColor">
            <summary>
            User color
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAccountInfoPreferences.VideosSeen">
            <summary>
            Videos seen
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAddress">
            <summary>
            Saved address
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.CreateTime">
            <summary>
            Created time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.SkipConfirm">
            <summary>
            Skip confirm
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.SkipConfirmVerified">
            <summary>
            Skip confirm verified
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Skip2FA">
            <summary>
            Skip 2FA
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Skip2FAVerified">
            <summary>
            Skip 2FA verified
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Memo">
            <summary>
            Memo
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.CooldownExpires">
            <summary>
            Cooldown expires
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddress.Verified">
            <summary>
            Verified
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig">
            <summary>
            Address book config
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig.Whitelist">
            <summary>
            Whitelist
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig.CreateTime">
            <summary>
            Created time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig.DisableTime">
            <summary>
            Disabled time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig.DefaultCooldown">
            <summary>
            Default cooldown
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAddressBookConfig.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAggTrade">
            <summary>
            Aggregated trade info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.ClosePrice">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.Trades">
            <summary>
            Number of trades
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.LastQuantity">
            <summary>
            Last quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.VolumeWeightedAveragePrice">
            <summary>
            Volume weighted average price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.HomeNotional">
            <summary>
            Home notional
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAggTrade.ForeignNotional">
            <summary>
            Foreign notional
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAnnouncement">
            <summary>
            Announcement
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAnnouncement.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAnnouncement.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAnnouncement.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAnnouncement.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAnnouncement.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXApiKey">
            <summary>
            API key info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.Nonce">
            <summary>
            Nonce
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.Cidr">
            <summary>
            Cidr
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.Cidrs">
            <summary>
            Cidr
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.Permissions">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.TargetAccountId">
            <summary>
            Target account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXApiKey.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.MajorCurrency">
            <summary>
            Major currency
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.AssetType">
            <summary>
            Asset type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.Scale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.IsMarginAsset">
            <summary>
            Is margin asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.MemoRequired">
            <summary>
            Memo required
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.MinDepositQuantity">
            <summary>
            Min deposit quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.MinWithdrawalQuantity">
            <summary>
            Min withdrawal quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.MaxWithdrawalQuantity">
            <summary>
            Max withdrawal quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAsset.Networks">
            <summary>
            Networks
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXAssetNetwork">
            <summary>
            Network info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAssetNetwork.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAssetNetwork.TokenAddress">
            <summary>
            Token address
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAssetNetwork.DepositEnabled">
            <summary>
            Deposit enabled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAssetNetwork.WithdrawalEnabled">
            <summary>
            Withdrawal enabled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAssetNetwork.WithdrawalFee">
            <summary>
            Withdrawal fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAssetNetwork.MinFee">
            <summary>
            Min fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXAssetNetwork.MaxFee">
            <summary>
            Max fee
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.Deposited">
            <summary>
            Deposited
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.Withdrawn">
            <summary>
            Withdrawn
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.TransferIn">
            <summary>
            Transfer in
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.TransferOut">
            <summary>
            Transfer out
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.PendingCredit">
            <summary>
            Pending credit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.PendingDebit">
            <summary>
            Pending debit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.ConfirmedDebit">
            <summary>
            Confirmed debit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalance.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXBalanceSummary">
            <summary>
            Balance summary
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.TransactType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.PendingDebit">
            <summary>
            Pending debit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.RealisedPnl">
            <summary>
            Realised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.UnrealisedPnl">
            <summary>
            Unrealised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBalanceSummary.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXBookTicker">
            <summary>
            Book ticker
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBookTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBookTicker.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBookTicker.BestBidQuantity">
            <summary>
            Best bid quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBookTicker.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBookTicker.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXBookTicker.BestAskQuantity">
            <summary>
            Best ask quantity
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXCompositeIndex">
            <summary>
            Composite index info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.IndexSymbol">
            <summary>
            Index symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.IndexMultiplier">
            <summary>
            Index multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.Reference">
            <summary>
            Reference
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.SourcePrice">
            <summary>
            Source price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.ConversionIndex">
            <summary>
            Conversion index
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.ConversionIndexPrice">
            <summary>
            Conversion index price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.Weight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXCompositeIndex.LogTime">
            <summary>
            Log time
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXExchangeStat">
            <summary>
            Exchange stats
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStat.RootSymbol">
            <summary>
            Root symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStat.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStat.Volume24h">
            <summary>
            Volume 24 hours
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStat.Turnover24h">
            <summary>
            Turnover 24 hours
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStat.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStat.OpenValue">
            <summary>
            Open value
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistory">
            <summary>
            Exchange stat history
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistory.RootSymbol">
            <summary>
            Root symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistory.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistory.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistoryUsd">
            <summary>
            Exchange stat history USD
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistoryUsd.RootSymbol">
            <summary>
            Root symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistoryUsd.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistoryUsd.Turnover24h">
            <summary>
            Turnover 24 hours
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistoryUsd.Turnover30d">
            <summary>
            Turnover 30 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistoryUsd.Turnover1y">
            <summary>
            Turnover 1 year
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExchangeStatHistoryUsd.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXExecution">
            <summary>
            Execution history
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.LastTradeQuantity">
            <summary>
            Last trade quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.LastTradePrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.LastTradeLiquidityIndicator">
            <summary>
            Last trade liquidity indicator
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.ExecutionType">
            <summary>
            Execution type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.FeePercentage">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.BrokerFee">
            <summary>
            Broker fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.TradePublishIndicator">
            <summary>
            Trade publish indicator
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.TradeMatchId">
            <summary>
            Matching trade id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.ValueFilled">
            <summary>
            Value filled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.BrokerExecComm">
            <summary>
            Broker exec comm
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.HomeNotional">
            <summary>
            Home notional
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.ForeignNotional">
            <summary>
            Foreign notional
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.RealisedPnl">
            <summary>
            Realised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXExecution.TradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXFillRatio">
            <summary>
            Fill ratio
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFillRatio.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFillRatio.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFillRatio.QuoteCount">
            <summary>
            Quote count
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFillRatio.DealtCount">
            <summary>
            Dealt count
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFillRatio.QuotesMavg7d">
            <summary>
            Quotes moving average 7 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFillRatio.DealtMavg7d">
            <summary>
            Dealt moving average 7 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFillRatio.QuoteFillRatioMavg7d">
            <summary>
            Quote fill ratio moving average 7 days 
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFundingRate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFundingRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFundingRate.FundingInterval">
            <summary>
            Funding interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFundingRate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXFundingRate.FundingRateDaily">
            <summary>
            Funding rate daily
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXIndex">
            <summary>
            Index info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.SymbolType">
            <summary>
            Symbol type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Underlying">
            <summary>
            Underlying asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.UnderlyingSymbol">
            <summary>
            Underlying symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Reference">
            <summary>
            Reference
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.ReferenceSymbol">
            <summary>
            Reference symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.PublishInterval">
            <summary>
            Publish interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.PriceStep">
            <summary>
            Price step
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.IsQuanto">
            <summary>
            Is quanto
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.IsInverse">
            <summary>
            Is inverse
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Taxed">
            <summary>
            Taxed
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Deleverage">
            <summary>
            Deleverage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.PrevPrice24h">
            <summary>
            Previous price24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.LastChangePcnt">
            <summary>
            Last change percentage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.HasLiquidity">
            <summary>
            Has liquidity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.MarkMethod">
            <summary>
            Mark method
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.InstantPnl">
            <summary>
            Instant pnl
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIndex.Capped">
            <summary>
            Capped
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXInsurance">
            <summary>
            Insurance info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXInsurance.Asset">
            <summary>   
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXInsurance.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXInsurance.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXIntervals">
            <summary>
            Interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIntervals.Intervals">
            <summary>
            Intervals
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXIntervals.Symbols">
            <summary>
            Symbols
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXLiquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXLiquidation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXLiquidation.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXLiquidation.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXLiquidation.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXLiquidation.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXMarginStatus">
            <summary>
            Margin status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.PrevRealisedPnl">
            <summary>
            Previous realised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.GrossComm">
            <summary>
            Gross comm
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.GrossOpenCost">
            <summary>
            Gross open cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.GrossOpenPremium">
            <summary>
            Gross open premium
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.GrossExecCost">
            <summary>
            Gross execution cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.GrossMarkValue">
            <summary>
            Gross mark value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.RiskValue">
            <summary>
            Risk value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.TargetExcessMargin">
            <summary>
            Target excess margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.RealisedPnl">
            <summary>
            Realised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.UnrealisedPnl">
            <summary>
            Unrealised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.MarginLeverage">
            <summary>
            Margin leverage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.MarginUsedPercentage">
            <summary>
            Margin used percentage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.ExcessMargin">
            <summary>
            Excess margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.AvailableMargin">
            <summary>
            Available margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.WithdrawableMargin">
            <summary>
            Withdrawable margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.MakerFeeDiscount">
            <summary>
            Maker fee discount
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.TakerFeeDiscount">
            <summary>
            Taker fee discount
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.ForeignMarginBalance">
            <summary>
            Foreign margin balance
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXMarginStatus.ForeignRequirement">
            <summary>
            Foreign requirement
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXNetwork">
            <summary>
            Network info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.NetworkSymbol">
            <summary>
            Network symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.TransactionExplorer">
            <summary>
            Transaction explorer
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.TokenExplorer">
            <summary>
            Token explorer
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.DepositConfirmations">
            <summary>
            Deposit confirmations
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNetwork.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXNotification">
            <summary>
            Notification
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNotification.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNotification.Body">
            <summary>
            Body
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNotification.TimeToLive">
            <summary>
            Time to live
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNotification.Closable">
            <summary>
            Closable
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNotification.Persist">
            <summary>
            Persist
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXNotification.Sound">
            <summary>
            Sound
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.ClientOrderLinkId">
            <summary>
            Client order link id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.Quantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.DisplayQuantity">
            <summary>
            Display quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.PeggedPriceType">
            <summary>
            Pegged order price type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.SettlementCurrency">
            <summary>
            Settlement currency
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.ExecutionInstruction">
            <summary>
            Execution instructions
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.ContingencyType">
            <summary>
            Contingency type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.Triggered">
            <summary>
            Triggered
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.WorkingIndicator">
            <summary>
            Working indicator
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.OrderRejectReason">
            <summary>
            Order reject reason
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.QuantityRemaining">
            <summary>
            Quantity remaining
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.TransactTime">
            <summary>
            Transact time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrder.PegOffsetValue">
            <summary>
            Peg offset value
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBook.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBook.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookEntry.TransactTime">
            <summary>
            TransactTime
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXOrderBookIncrementalUpdate">
            <summary>
            Incremental order book update
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookIncrementalUpdate.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookIncrementalUpdate.Entries">
            <summary>
            Entries
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate">
            <summary>
            Order book update
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate.Bids">
            <summary>
            Bids
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate.Asks">
            <summary>
            Asks
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdateEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdateEntry.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXOrderBookUpdateEntry.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXPosition">
            <summary>
            Position info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.Underlying">
            <summary>
            Underlying
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.FeeRate">
            <summary>
            The maximum of the maker, taker, and settlement fee.
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.InitialMarginRequirement">
            <summary>
            Initial margin requirement
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.MaintenanceMarginRequirement">
            <summary>
            Maintenance margin requirement
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.Leverage">
            <summary>
            Leverage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.DeleveragePercentile">
            <summary>
            Deleverage percentile
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.RebalancedPnl">
            <summary>
            Rebalanced profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PreviousRealisedPnl">
            <summary>
            Previous realised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PreviousUnrealisedPnl">
            <summary>
            Previous unrealised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.OpeningQuantity">
            <summary>
            Opening quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.OpenOrderBuyQuantity">
            <summary>
            Open order buy quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.OpenOrderBuyCost">
            <summary>
            Open order buy cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.OpenOrderBuyPremium">
            <summary>
            Open order buy premium
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.OpenOrderSellQuantity">
            <summary>
            Open order sell quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.OpenOrderSellCost">
            <summary>
            Open order sell cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.OpenOrderSellPremium">
            <summary>
            Open order sell premium
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.CurrentQuantity">
            <summary>
            Current quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.CurrentCost">
            <summary>
            Current cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.CurrentCommissions">
            <summary>
            Current commissions
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.RealisedCost">
            <summary>
            Realised cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.UnrealisedCost">
            <summary>
            Unrealised cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.GrossOpenPremium">
            <summary>
            Gross open premium
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.IsOpen">
            <summary>
            Is open
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.MarkValue">
            <summary>
            Mark value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.RiskValue">
            <summary>
            Risk value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.HomeNotional">
            <summary>
            Home notional
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.ForeignNotional">
            <summary>
            Foreign notional
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PositionStatus">
            <summary>
            Position status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PositionCost">
            <summary>
            Position cost
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PositionCross">
            <summary>
            Position cross
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PositionCommissions">
            <summary>
            Position commissions
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PositionLoss">
            <summary>
            Position loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PositionMargin">
            <summary>
            Position margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.PositionMaintenance">
            <summary>
            Position maintenance
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.RealisedPnl">
            <summary>
            Realised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.UnrealizedPnl">
            <summary>
            Unrealised profit and loss
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.UnrealisedPnlPcnt">
            <summary>
            Unrealised profit and loss percentage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.UnrealisedRoePercentage">
            <summary>
            Unrealised roe percentage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.AverageCostPrice">
            <summary>
            Average cost price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.AverageEntryPrice">
            <summary>
            Average entry price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.BreakEvenPrice">
            <summary>
            Break even price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.MarginCallPrice">
            <summary>
            Margin call price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.BankruptPrice">
            <summary>
            Bankrupt price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXPosition.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXSettlementHistory">
            <summary>
            Settlement info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSettlementHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSettlementHistory.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSettlementHistory.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSettlementHistory.SettledPrice">
            <summary>
            Settled price
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.SymbolType">
            <summary>
            Symbol type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ListingTime">
            <summary>
            Listing time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FrontTime">
            <summary>
            Front time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ExpiryTime">
            <summary>
            Expiry time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.SettleTime">
            <summary>
            Settle time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ListedSettle">
            <summary>
            Listed settle
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.PositionAsset">
            <summary>
            Position asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Underlying">
            <summary>
            Underlying asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.UnderlyingSymbol">
            <summary>
            Underlying symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Reference">
            <summary>
            Reference
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ReferenceSymbol">
            <summary>
            Reference symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.CalcInterval">
            <summary>
            Calc interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.PublishInterval">
            <summary>
            Publish interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.PublishTime">
            <summary>
            Publish time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MaxPrice">
            <summary>
            Max price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LotSize">
            <summary>
            Lot size
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.PriceStep">
            <summary>
            Price step
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Multiplier">
            <summary>
            Multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.SettlementAsset">
            <summary>
            Settlement asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.UnderlyingToPositionMultiplier">
            <summary>
            Underlying to position multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.UnderlyingToSettleMultiplier">
            <summary>
            Underlying to settle multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.QuoteToSettleMultiplier">
            <summary>
            Quote to settle multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.IsQuanto">
            <summary>
            Is quanto
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.IsInverse">
            <summary>
            Is inverse
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.RiskStep">
            <summary>
            Risk step
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Taxed">
            <summary>
            Taxed
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Deleverage">
            <summary>
            Deleverage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.SettlementFee">
            <summary>
            Settlement fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingBaseSymbol">
            <summary>
            Funding base symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingQuoteSymbol">
            <summary>
            Funding quote symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingPremiumSymbol">
            <summary>
            Funding premium symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingTimestamp">
            <summary>
            Funding timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingInterval">
            <summary>
            Funding interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.IndicativeFundingRate">
            <summary>
            Indicative funding rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.RebalanceTimestamp">
            <summary>
            Rebalance timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.RebalanceInterval">
            <summary>
            Rebalance interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.PrevClosePrice">
            <summary>
            Prev close price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LimitDownPrice">
            <summary>
            Limit down price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LimitUpPrice">
            <summary>
            Limit up price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.TotalVolume">
            <summary>
            Total volume
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Volume24h">
            <summary>
            Volume 24 hours
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.PrevTotalTurnover">
            <summary>
            Previous total turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.TotalTurnover">
            <summary>
            Total turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Turnover24h">
            <summary>
            Turnover24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.HomeNotional24h">
            <summary>
            Home notional24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ForeignNotional24h">
            <summary>
            Foreign notional24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.PrevPrice24h">
            <summary>
            Previous price24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.VolumeWeightedAveragePrice">
            <summary>
            Volume weighted average price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LastPriceProtected">
            <summary>
            Last price protected
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LastTickDirection">
            <summary>
            Last tick direction
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.LastChangePercentage">
            <summary>
            Last change percentage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MidPrice">
            <summary>
            Mid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ImpactBidPrice">
            <summary>
            Impact bid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ImpactMidPrice">
            <summary>
            Impact mid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.ImpactAskPrice">
            <summary>
            Impact ask price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.HasLiquidity">
            <summary>
            Has liquidity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.OpenValue">
            <summary>
            Open value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FairMethod">
            <summary>
            Fair method
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FairBasisRate">
            <summary>
            Fair basis rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FairBasis">
            <summary>
            Fair basis
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FairPrice">
            <summary>
            Fair price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MarkMethod">
            <summary>
            Mark method
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.IndicativeSettlePrice">
            <summary>
            Indicative settle price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.SettledPriceAdjustmentRate">
            <summary>
            Settled price adjustment rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.SettledPrice">
            <summary>
            Settled price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.InstantPnl">
            <summary>
            Instant pnl
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.MinTick">
            <summary>
            Min tick
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingBaseRate">
            <summary>
            Funding base rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.FundingQuoteRate">
            <summary>
            Funding quote rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbol.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate">
            <summary>
            Symbol update
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.SymbolType">
            <summary>
            Symbol type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ListingTime">
            <summary>
            Listing time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FrontTime">
            <summary>
            Front time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ExpiryTime">
            <summary>
            Expiry time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.SettleTime">
            <summary>
            Settle time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ListedSettle">
            <summary>
            Listed settle
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.PositionAsset">
            <summary>
            Position asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Underlying">
            <summary>
            Underlying asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.UnderlyingSymbol">
            <summary>
            Underlying symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Reference">
            <summary>
            Reference
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ReferenceSymbol">
            <summary>
            Reference symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.CalcInterval">
            <summary>
            Calc interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.PublishInterval">
            <summary>
            Publish interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.PublishTime">
            <summary>
            Publish time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MaxPrice">
            <summary>
            Max price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LotSize">
            <summary>
            Lot size
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.PriceStep">
            <summary>
            Price step
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Multiplier">
            <summary>
            Multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.SettlementAsset">
            <summary>
            Settlement asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.UnderlyingToPositionMultiplier">
            <summary>
            Underlying to position multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.UnderlyingToSettleMultiplier">
            <summary>
            Underlying to settle multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.QuoteToSettleMultiplier">
            <summary>
            Quote to settle multiplier
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.IsQuanto">
            <summary>
            Is quanto
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.IsInverse">
            <summary>
            Is inverse
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.InitialMargin">
            <summary>
            Initial margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MaintenanceMargin">
            <summary>
            Maintenance margin
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.RiskLimit">
            <summary>
            Risk limit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.RiskStep">
            <summary>
            Risk step
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Taxed">
            <summary>
            Taxed
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Deleverage">
            <summary>
            Deleverage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.SettlementFee">
            <summary>
            Settlement fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingBaseSymbol">
            <summary>
            Funding base symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingQuoteSymbol">
            <summary>
            Funding quote symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingPremiumSymbol">
            <summary>
            Funding premium symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingTimestamp">
            <summary>
            Funding timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingInterval">
            <summary>
            Funding interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.IndicativeFundingRate">
            <summary>
            Indicative funding rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.RebalanceTimestamp">
            <summary>
            Rebalance timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.RebalanceInterval">
            <summary>
            Rebalance interval
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.PrevClosePrice">
            <summary>
            Prev close price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LimitDownPrice">
            <summary>
            Limit down price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LimitUpPrice">
            <summary>
            Limit up price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.TotalVolume">
            <summary>
            Total volume
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Volume24h">
            <summary>
            Volume 24 hours
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.PrevTotalTurnover">
            <summary>
            Previous total turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.TotalTurnover">
            <summary>
            Total turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Turnover24h">
            <summary>
            Turnover24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.HomeNotional24h">
            <summary>
            Home notional24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ForeignNotional24h">
            <summary>
            Foreign notional24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.PrevPrice24h">
            <summary>
            Previous price24h
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.VolumeWeightedAveragePrice">
            <summary>
            Volume weighted average price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.HighPrice">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LowPrice">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LastPriceProtected">
            <summary>
            Last price protected
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LastTickDirection">
            <summary>
            Last tick direction
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.LastChangePcnt">
            <summary>
            Last change percentage
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MidPrice">
            <summary>
            Mid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ImpactBidPrice">
            <summary>
            Impact bid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ImpactMidPrice">
            <summary>
            Impact mid price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.ImpactAskPrice">
            <summary>
            Impact ask price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.HasLiquidity">
            <summary>
            Has liquidity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.OpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.OpenValue">
            <summary>
            Open value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FairMethod">
            <summary>
            Fair method
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FairBasisRate">
            <summary>
            Fair basis rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FairBasis">
            <summary>
            Fair basis
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FairPrice">
            <summary>
            Fair price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MarkMethod">
            <summary>
            Mark method
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.IndicativeSettlePrice">
            <summary>
            Indicative settle price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.SettledPriceAdjustmentRate">
            <summary>
            Settled price adjustment rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.SettledPrice">
            <summary>
            Settled price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.InstantPnl">
            <summary>
            Instant pnl
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.MinTick">
            <summary>
            Min tick
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingBaseRate">
            <summary>
            Funding base rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.FundingQuoteRate">
            <summary>
            Funding quote rate
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXSymbolVolume">
            <summary>
            Volume info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Turnover24h">
            <summary>
            Turnover 24 hours
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Turnover7d">
            <summary>
            Turnover 7 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Turnover30d">
            <summary>
            Turnover 30 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.TurnoverYTD">
            <summary>
            Turnover year to date
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Turnover365d">
            <summary>
            Turnover 1 year
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Price24h">
            <summary>
            Price 24 hours
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Price7d">
            <summary>
            Price 7 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Price30d">
            <summary>
            Price 30 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.PriceYTD">
            <summary>
            Price year to date
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.Price365d">
            <summary>
            Price 1 year
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXSymbolVolume.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.TickDirection">
            <summary>
            Tick direction
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.TradeMatchId">
            <summary>
            Trade match id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.Value">
            <summary>
            Trade value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.HomeNotional">
            <summary>
            Home notional
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTrade.ForeignNotional">
            <summary>
            Foreign notional
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXTradeFee">
            <summary>
            Trading fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeFee.MaxFee">
            <summary>
            Max fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeFee.MakerFee">
            <summary>
            Maker fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeFee.TakerFee">
            <summary>
            Taker fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeFee.SettlementFee">
            <summary>
            Settlement fee
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXTradeUpdate">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.TradeMatchId">
            <summary>
            Trade match id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.TickDirection">
            <summary>
            Tick direction
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.GrossValue">
            <summary>
            Gross value
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.HomeNotional">
            <summary>
            Home notional
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTradeUpdate.ForeignNotional">
            <summary>
            Foreign notional
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXTransaction">
            <summary>
            Transaction
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Currency">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.WalletBalance">
            <summary>
            Wallet balance
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.TransactionStatus">
            <summary>
            Transaction status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Transaction">
            <summary>
            Transaction
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXTransaction.Memo">
            <summary>
            Memo
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXUsdVolume">
            <summary>
            Average trading volume 30 days
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUsdVolume.AverageVolumeUsd">
            <summary>
            Average trading volume USD
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUsdVolume.AverageVolumeUsdSpot">
            <summary>
            Average trading volume USD spot
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUsdVolume.AverageVolumeUsdContract">
            <summary>
            Average trading volume USD contract
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXUserEvent">
            <summary>
            User event
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.EventStatus">
            <summary>
            Event status
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.CreatedById">
            <summary>
            Created by id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.Ip">
            <summary>
            Ip
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.GeoipCountry">
            <summary>
            Geo-ip country
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.GeoipRegion">
            <summary>
            Geo-ip region
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.GeoipSubRegion">
            <summary>
            Geo-ip sub region
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.EventMeta">
            <summary>
            Event meta
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXUserEvent.Created">
            <summary>
            Created
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Models.BitMEXValueRatio">
            <summary>
            Value ratio
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXValueRatio.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXValueRatio.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXValueRatio.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXValueRatio.QuoteCount">
            <summary>
            Quote count
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXValueRatio.VolumeXBT">
            <summary>
            Volume XBT
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXValueRatio.QuoteValueRatio">
            <summary>
            Quote value ratio
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Models.BitMEXValueRatio.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Options.BitMEXOptions">
            <summary>
            BitMEX options
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Options.BitMEXOrderBookOptions">
            <summary>
            Options for the BitMEX SymbolOrderBook
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXOrderBookOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXOrderBookOptions.Limit">
            <summary>
            The top amount of results to keep in sync. If for example limit=10 is used, the order book will contain the 10 best bids and 10 best asks. Leaving this null will sync the full order book
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXOrderBookOptions.AdjustQuantities">
            <summary>
            Whether or not quantities in the order book should be adjusted from the base unit. For example if false then 0.1 ETH would be 100000000
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Options.BitMEXRestOptions">
            <summary>
            Options for the BitMEXRestClient
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXRestOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="M:BitMEX.Net.Objects.Options.BitMEXRestOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXRestOptions.ExchangeOptions">
            <summary>
            Exchange API options
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Options.BitMEXSocketOptions">
            <summary>
            Options for the BitMEXSocketClient
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXSocketOptions.Default">
            <summary>
            Default options for new clients
            </summary>
        </member>
        <member name="M:BitMEX.Net.Objects.Options.BitMEXSocketOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:BitMEX.Net.Objects.Options.BitMEXSocketOptions.ExchangeOptions">
            <summary>
            Exchange API options
            </summary>
        </member>
        <member name="T:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXOptionalSymbolSubscription`1">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXOptionalSymbolSubscription`1.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXOptionalSymbolSubscription`1.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXOptionalSymbolSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.String[],System.String[],System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{`0}}},System.Boolean)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXOptionalSymbolSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXOptionalSymbolSubscription`1.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXOptionalSymbolSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXRawSubscription`1">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXRawSubscription`1.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXRawSubscription`1.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXRawSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.String[],System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{`0}},System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="topics"></param>
            <param name="handler"></param>
            <param name="auth"></param>
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXRawSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXRawSubscription`1.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXRawSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXSubscription`1">
            <inheritdoc />
        </member>
        <member name="P:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXSubscription`1.ListenerIdentifiers">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXSubscription`1.GetMessageType(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXSubscription`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.String[],System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{`0}},System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="logger"></param>
            <param name="topics"></param>
            <param name="handler"></param>
            <param name="auth"></param>
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXSubscription`1.GetSubQuery(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXSubscription`1.GetUnsubQuery">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.Objects.Sockets.Subscriptions.BitMEXSubscription`1.DoHandleMessage(CryptoExchange.Net.Sockets.SocketConnection,CryptoExchange.Net.Objects.Sockets.DataEvent{System.Object})">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.SymbolOrderBooks.BitMEXExchangeSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXExchangeSymbolOrderBook.#ctor(System.String,System.Action{BitMEX.Net.Objects.Options.BitMEXOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXExchangeSymbolOrderBook.#ctor(System.String,System.Action{BitMEX.Net.Objects.Options.BitMEXOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,BitMEX.Net.Interfaces.Clients.IBitMEXSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXExchangeSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXExchangeSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXExchangeSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:BitMEX.Net.SymbolOrderBooks.BitMEXOrderBookFactory">
            <summary>
            BitMEX order book factory
            </summary>
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="P:BitMEX.Net.SymbolOrderBooks.BitMEXOrderBookFactory.Exchange">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{BitMEX.Net.Objects.Options.BitMEXOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:BitMEX.Net.SymbolOrderBooks.BitMEXOrderBookFactory.Create(System.String,System.Action{BitMEX.Net.Objects.Options.BitMEXOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.BitMEX(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the BitMEX REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.BitMEX(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the BitMEX Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBitMEX(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add services such as the IBitMEXRestClient and IBitMEXSocketClient. Configures the services based on the provided configuration.
            </summary>
            <param name="services">The service collection</param>
            <param name="configuration">The configuration(section) containing the options</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddBitMEX(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BitMEX.Net.Objects.Options.BitMEXOptions})">
            <summary>
            Add services such as the IBitMEXRestClient and IBitMEXSocketClient. Services will be configured based on the provided options.
            </summary>
            <param name="services">The service collection</param>
            <param name="optionsDelegate">Set options for the BitMEX services</param>
            <returns></returns>
        </member>
    </members>
</doc>
